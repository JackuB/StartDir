# data_airing_credits/cast [/data_airing_credits/cast?id={id}&page={page}&by={by}]
Returns cast credits for a program in a current broadcast schedule.

## GET
This request requires the `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.

+ Parameters
  + id (required, integer)
    The `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `role`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __role__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-role__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __person.image=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __role=Tony Stark__. To end with items that contain a particular value, precede the value with an exclamation like this: __role=!Tony Stark__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"airing_credits",
       "description":"Program credits.",
       "properties":{
          "in":{
             "type":"string"
          },
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Program credit.",
                   "properties":{
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "person":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "in",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_airing_credits/crew [/data_airing_credits/crew?id={id}&page={page}&by={by}]
Returns crew credits for a program in a current broadcast schedule.

## GET
This request requires the `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.

+ Parameters
  + id (required, integer)
    The `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `type`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __type=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"airing_credits",
       "description":"Program credits.",
       "properties":{
          "in":{
             "type":"string"
          },
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Program credit.",
                   "properties":{
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "person":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "in",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_airing_credits/credits [/data_airing_credits/credits?id={id}&page={page}&by={by}]
Returns both cast and crew credits for a program in a current broadcast schedule.

## GET
This request requires the `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.

+ Parameters
  + id (required, integer)
    The `data_airing_credits` ID for a program in a current broadcast schedule, which is returned in response to a [data_airing](/#reference/tv-schedule/dataairing) request. A `data_airing_credits` ID is the same as the `data_airing` ID for the program and expires when the program disappears from the current broadcast schedule.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `credit`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify field-equals-null, like this: __role=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"airing_credits",
       "description":"Program credits.",
       "properties":{
          "in":{
             "type":"string"
          },
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Program credit.",
                   "properties":{
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "person":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "in",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_airing_synopses/collection [/data_airing_synopses/collection?id={id}&in={in}&in2={in2}&in3={in3}]
Returns a range of synopses for a program in a current broadcast schedule.

## GET
This request requires the `data_airing_synopses` ID for a program in a current broadcast schedule, returned in responses to the following requests. (Note:  A `data_airing_synopses` ID is the same as the `data_airing` ID for a program and expires when the program disappears from the broadcast schedule.)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
+  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
+  [data_episode_appearances](/#reference/tv-schedule/dataepisodeappearances)
+  [data_other_appearances](/#reference/tv-schedule/dataotherappearances)
+  [data_service_schedules/bulk](/#reference/tv-schedule/dataserviceschedulesbulk)
+  [data_service_schedules/single](/#reference/tv-schedule/dataserviceschedulessingle)
+  [data_service_schedules/screen](/#reference/tv-schedule/dataserviceschedulesscreen)

+ Parameters
  + id (required, integer)
    The `data_airing_synopses` ID for a program in a current broadcast schedule, returned in responses to the following requests. Note:  A `data_airing_synopses` ID is the same as the `data_airing` ID for a program and expires when the program disappears from the broadcast schedule.
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
      +  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
      +  [data_episode_appearances](/#reference/tv-schedule/dataepisodeappearances)
      +  [data_other_appearances](/#reference/tv-schedule/dataotherappearances)
      +  [data_service_schedules/bulk](/#reference/tv-schedule/dataserviceschedulesbulk)
      +  [data_service_schedules/single](/#reference/tv-schedule/dataserviceschedulessingle)
      +  [data_service_schedules/screen](/#reference/tv-schedule/dataserviceschedulesscreen)

  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"airing_synopses",
       "description":"Synopses of a program.",
       "properties":{
          "synopses":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Synopses of the program.",
                   "properties":{
                      "in":{
                         "type":"string"
                      },
                      "length":{
                         "type":"string",
                         "description":"Type of synopsis.",
                         "oneOf":[
                            {
                               "enum":[
                                  "long"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 420 characters."
                            },
                            {
                               "enum":[
                                  "short"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 150 characters."
                            },
                            {
                               "enum":[
                                  "plain"
                               ],
                               "description":"Straightforward description, without credits, that is never critical."
                            },
                            {
                               "enum":[
                                  "extended"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 2000 characters."
                            },
                            {
                               "enum":[
                                  "source"
                               ],
                               "description":"Synopsis supplied by the channel on which the show is broadcast."
                            },
                            {
                               "enum":[
                                  "review"
                               ],
                               "description":"Movie review."
                            }
                         ]
                      },
                      "synopsis":{
                         "type":"string",
                         "description":"The synopsis."
                      },
                      "cuts":{
                         "type":"array",
                         "description":"Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark).",
                         "items":{
                            "type":"string"
                         }
                      }
                   },
                   "required":[
                      "in",
                      "length",
                      "synopsis"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_airing_synopses/best [/data_airing_synopses/best?id={id}&length={length}&length2={length2}&length3={length3}&length4={length4}&in={in}&in2={in2}&in3={in3}]
Returns the best available synopsis of a program in a current broadcast schedule, based on type:
+  `long` &mdash; Straightforward, objective description of the program in up to 420 characters.
+  `short` &mdash; A shorter version of the "long" description.
+  `plain` &mdash; A straightforward description without credits that is never critical.
+  `extended` &mdash; A more detailed description than the "long" description, up to 2000 characters.

## GET
This request requires the `data_airing_synopses` ID for a program in a current broadcast schedule, returned in responses to the following requests. (Note:  A `data_airing_synopses` ID is the same as the `data_airing` ID for a program and expires when the program disappears from the broadcast schedule.)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
+  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
+  [data_episode_appearances](/#reference/tv-schedule/dataepisodeappearances)
+  [data_other_appearances](/#reference/tv-schedule/dataotherappearances)
+  [data_service_schedules/bulk](/#reference/tv-schedule/dataserviceschedulesbulk)
+  [data_service_schedules/single](/#reference/tv-schedule/dataserviceschedulessingle)
+  [data_service_schedules/screen](/#reference/tv-schedule/dataserviceschedulesscreen)

+ Parameters
  + id (required, integer)
    The `data_airing_synopses` ID for a program in a current broadcast schedule, returned in responses to the following requests. Note:  A `data_airing_synopses` ID is the same as the `data_airing` ID for a program and expires when the program disappears from the broadcast schedule.
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
      +  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
      +  [data_episode_appearances](/#reference/tv-schedule/dataepisodeappearances)
      +  [data_other_appearances](/#reference/tv-schedule/dataotherappearances)
      +  [data_service_schedules/bulk](/#reference/tv-schedule/dataserviceschedulesbulk)
      +  [data_service_schedules/single](/#reference/tv-schedule/dataserviceschedulessingle)
      +  [data_service_schedules/screen](/#reference/tv-schedule/dataserviceschedulesscreen)

  + length (required, string enum, `short`)
    First choice for type of description:
    <table>
    <tr><th>Value</th><th>Description</th>
    </tr><tr>
    <td>long</td><td><p>Straightforward, objective description of the program in up to 420 characters.</p></td>
    </tr><tr>
    <td>short</td><td><p>A shorter version of the "long" description.</p></td>
    </tr><tr>
    <td>plain</td><td><p>A straightforward description without credits that is never critical.</p></td>
    </tr><tr>
    <td>extended</td><td><p>A more detailed description than the "long" description, up to 2000 characters.</p></td>
    </tr>
    </table>
  + length2 (optional, string enum, `long`)
    Second choice for type of description.
  + length3 (optional, string enum, `plain`)
    Third choice for type of description.
  + length4 (optional, string enum, `extended`)
    Fourth choice for type of description.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"airing_synopsis",
       "description":"Synopses of a program.",
       "properties":{
          "synopsis":{
             "type":"object",
             "description":"Synopses of the program.",
             "properties":{
                "in":{
                   "type":"string"
                },
                "length":{
                   "type":"string",
                   "description":"Type of synopsis.",
                   "oneOf":[
                      {
                         "enum":[
                            "long"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 420 characters."
                      },
                      {
                         "enum":[
                            "short"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 150 characters."
                      },
                      {
                         "enum":[
                            "plain"
                         ],
                         "description":"Straightforward description, without credits, that is never critical."
                      },
                      {
                         "enum":[
                            "extended"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 2000 characters."
                      },
                      {
                         "enum":[
                            "source"
                         ],
                         "description":"Synopsis supplied by the channel on which the show is broadcast."
                      },
                      {
                         "enum":[
                            "review"
                         ],
                         "description":"Movie review."
                      }
                   ]
                },
                "synopsis":{
                   "type":"string",
                   "description":"The synopsis."
                },
                "cuts":{
                   "type":"array",
                   "description":"Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark).",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "required":[
                "in",
                "length",
                "synopsis"
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_airing_synopsis [/data_airing_synopsis?id={id}&length={length}&length2={length2}&length3={length3}&length4={length4}]
Returns the best available synopsis of a program in a current broadcast schedule, based on type:
+  `long` &mdash; Straightforward, objective description of the program in up to 420 characters.
+  `short` &mdash; A shorter version of the "long" description.
+  `plain` &mdash; A straightforward description without credits that is never critical.
+  `extended` &mdash; A more detailed description than the "long" description, up to 2000 characters.

## GET
__NOTE: This request is now deprecated.__ _Use one of the `data_airing_synopses` requests instead:_
+  [data_airing_synopses/best](/#reference/tv-schedule/dataairingsynopsesbest)
+  [data_airing_synopses/collection](/#reference/tv-schedule/dataairingsynopsescollection)

+ Parameters
  + id (required, integer)
    The `data_airing_synopses` ID for a program in a current broadcast schedule, returned in responses to the following requests. Note:  A `data_airing_synopses` ID is the same as the `data_airing` ID for a program and expires when the program disappears from the broadcast schedule.
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
      +  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
      +  [data_episode_appearances](/#reference/tv-schedule/dataepisodeappearances)
      +  [data_other_appearances](/#reference/tv-schedule/dataotherappearances)
      +  [data_service_schedules/bulk](/#reference/tv-schedule/dataserviceschedulesbulk)
      +  [data_service_schedules/single](/#reference/tv-schedule/dataserviceschedulessingle)
      +  [data_service_schedules/screen](/#reference/tv-schedule/dataserviceschedulesscreen)

  + length (required, string enum, `short`)
    First choice for type of description:
    <table>
    <tr><th>Value</th><th>Description</th>
    </tr><tr>
    <td>long</td><td><p>Straightforward, objective description of the program in up to 420 characters.</p></td>
    </tr><tr>
    <td>short</td><td><p>A shorter version of the "long" description.</p></td>
    </tr><tr>
    <td>plain</td><td><p>A straightforward description without credits that is never critical.</p></td>
    </tr><tr>
    <td>extended</td><td><p>A more detailed description than the "long" description, up to 2000 characters.</p></td>
    </tr>
    </table>
  + length2 (optional, string enum, `long`)
    Second choice for type of description.
  + length3 (optional, string enum, `plain`)
    Third choice for type of description.
  + length4 (optional, string enum, `plain`)
    Fourth choice for type of description.

+ Response 200 (application/json)
```
    {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "title": "airing_synopses",
        "description": "Synopses of the program.",
        "properties": {
            "id": {
                "type": "integer",
                "description": "Rovi ID for the broadcast."
            },
            "synopses": {
                "type": "object",
                "description": "Synopses of the program.",
                "properties": {
                    "in": {
                        "type": "string"
                    },
                    "length": {
                        "type": "string",
                        "description": "Type of synopsis.",
                        "oneOf": [
                            {
                                "enum": [
                                    "long"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 420 characters."
                            },
                            {
                                "enum": [
                                    "short"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 150 characters."
                            },
                            {
                                "enum": [
                                    "plain"
                                ],
                                "description": "Straightforward description, without credits, that is never critical."
                            },
                            {
                                "enum": [
                                    "extended"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 2000 characters."
                            },
                            {
                                "enum": [
                                    "source"
                                ],
                                "description": "Synopsis supplied by the channel on which the show is broadcast."
                            },
                            {
                                "enum": [
                                    "review"
                                ],
                                "description": "Movie review."
                            }
                        ]
                    },
                    "synopsis": {
                        "type": "string",
                        "description": "Synopsis of the program."
                    },
                    "cuts": {
                        "type": "array",
                        "description": "Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark).",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "in",
                    "length",
                    "synopsis"
                ]
            },
            "links": {
                "type": "object",
                "properties": {
                    "data_airing_synopses": {
                        "type": "object",
                        "description": "ID to use in a data_airing_synopses request to get synopses for the program.",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    },
                    "data_airing": {
                        "type": "object",
                        "description": "ID to use in an data_airing request to get information about the broadcast.",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    }
                },
                "required": [
                    "data_airing_synopses",
                    "data_airing"
                ]
            },
            "page": {
                "type": "integer",
                "description": "Pagination index of the request."
            },
            "size": {
                "type": "integer",
                "description": "Number of elements returned."
            },
            "total": {
                "type": "integer",
                "description": "Total number of elements."
            }
        },
        "required": [
            "id",
            "links"
        ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# Group Image
This section documents the calls that return images and image metadata for shows, releases, people, and channel logos.

To review, let's summarize the procedures for returning images as described in the section [About Our APIs](http://docs.rovicloudapi.apiary.io/#introduction/about-our-apis).

__To Get Channel Logos__

There are two paths to a channel logo.

If you want the standard logo for a channel as returned by a [data_service_channels](/#reference/tv-schedule/dataservicechannelsbulk) response, just grab the `media_logo` ID there and call [media_logo](/#reference/image/medialogo) to select the size and get the logo file.

If you want a different logo, follow these steps:
+ Grab the `data_source_logos` ID for the channel from the [data_service_channels](/#reference/tv-schedule/dataservicechannelsbulk) response.
+ Then EITHER call [data_source_logos/collection](/#reference/image/datasourcelogoscollection) to return a list of the logos available and select the `media_logo` ID of the logo you want.
+ OR call [data_source_logos/best](/#reference/image/datasourcelogosbest) to return the `media_logo` ID of the best logo as determined by five possible filters.
+ Finally, when you have the `media_logo` ID, call [media_logo](/#reference/image/medialogo) to select the size and get the logo file.

__To Get Images for a Movie, Series, Season, Episode, or Other Show__

There are two paths to an image for a movie, series, season, episode, or other show.

If you want the image that a response recommends, just grab the `media_image` ID there in the response and either call [media_image/sized](/#reference/image/mediaimagesized) to select the size and get the image file or call [media_image/master](/#reference/image/mediaimagemaster) to get the original image file.

If you want another image, follow these steps:
+ Grab the `data_content_images` ID from the response.
+ Then EITHER call [data_content_images/collection](/#reference/image/datacontentimagescollection) to return a list of the available images and select the `media_image` ID of the image you want.
+ OR call [data_content_images/best](/#reference/image/datacontentimagesbest) to return the `media_image` ID of the best image as determined by five possible filters.
+ Finally, EITHER call [media_image/master](/#reference/image/mediaimagemaster) to return the original image file.
+ OR call [media_image/sized](/#reference/image/mediaimagesized) to return the image file in the size you want.

__To Get Images for a Release of a Movie, Episode, or Other Show__

There are two paths to an image for a release of a movie, episode, or other show.

If you want the image that a response recommends, just grab the `media_image` ID there in the response and either call [media_image/sized](/#reference/image/mediaimagesized) to select the size and get the image file or call [media_image/master](/#reference/image/mediaimagemaster) to get the original image file.

If you want another image, follow these steps:
+ Grab the `data_release_images` ID from the response (that ID is the same as the `data_release` ID).
+ Then EITHER call [data_release_images/collection](/#reference/image/datareleaseimagescollection) to return a list of the available images and select the `media_image` ID of the image you want.
+ OR call [data_release_images/best](/#reference/image/datareleaseimagesbest) to return the `media_image` ID of the best image as determined by five possible filters.
+ Finally, EITHER call [media_image/master](/#reference/image/mediaimagemaster) to return the original image file.
+ OR call [media_image/sized](/#reference/image/mediaimagesized) to return the image file in the size you want.

__To Get Images of a Person__

There are two paths to an image of a person. Both paths include premium celebrity images if your subscription allows access to those images.

If you want the image that a response recommends, just grab the `media_image` ID there in the response and either call [media_image/sized](/#reference/image/mediaimagesized) to select the size and get the image file or call [media_image/master](/#reference/image/mediaimagemaster) to get the original image file.

If you want another image, follow these steps:
+ Grab the `data_name_images` ID from the response.
+ Then EITHER call [data_name_images/collection](/#reference/image/datanameimagescollection) to return a list of the available images and select the `media_image` ID of the image you want.
+ OR call [data_name_images/best](/#reference/image/datanameimagesbest) to return the `media_image` ID of the best image as determined by five possible filters.
+ Finally, EITHER call [media_image/master](/#reference/image/mediaimagemaster) to return the original image file.
+ OR call [media_image/sized](/#reference/image/mediaimagesized) to return the image file in the size you want.

# data_source_logos/collection [/data_source_logos/collection?id={id}&in={in}&in2={in2}&in3={in3}&page={page}]
Returns metadata about the available logos for a TV channel.

To deliver a logo specified by the response to this request, grab the `media_logo ID` for that logo and then call [media_logo](/#reference/image/medialogo).

## GET
This request requires the `data_source_logos` ID for the source of programming on the channel, which is returned by the following requests. A `data_source_logos` ID for a source is the same as the `data_source` ID.
+ [data_source](/#reference/tv-schedule/datasource)
+ [data_service_channels/bulk](/#reference/tv-schedule/dataservicechannelsbulk)
+ [data_service_channels/single](/#reference/tv-schedule/dataservicechannelssingle)
+ [data_service_channels/screen](/#reference/tv-schedule/dataservicechannelsscreen)

+ Parameters
  + id (required, integer, `69047095`)
    The `data_source_logos` ID for the source of programming on the channel, which is returned by the following requests. A `data_source_logos` ID for a source is the same as the `data_source` ID.
      + [data_source](/#reference/tv-schedule/datasource)
      + [data_service_channels/bulk](/#reference/tv-schedule/dataservicechannelsbulk)
      + [data_service_channels/single](/#reference/tv-schedule/dataservicechannelssingle)
      + [data_service_channels/screen](/#reference/tv-schedule/dataservicechannelsscreen)

  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"source_logos",
       "description":"Information about logo files associated with a source of programming on a television channel.",
       "properties":{
          "logos":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Logos associated with the source.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language of the logo, stated as a two-character, ISO 639 language code."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of logo.",
                         "oneOf":[
                            {
                               "enum":[
                                  "jersey"
                               ],
                               "description":"Sports jersey logo."
                            },
                            {
                               "enum":[
                                  "league"
                               ],
                               "description":"Sports league logo."
                            },
                            {
                               "enum":[
                                  "mso"
                               ],
                               "description":"MSO branding logo."
                            },
                            {
                               "enum":[
                                  "provider"
                               ],
                               "description":"MSO logo."
                            },
                            {
                               "enum":[
                                  "source"
                               ],
                               "description":"Logo for the source of programming on a television channel."
                            },
                            {
                               "enum":[
                                  "team"
                               ],
                               "description":"Sports team logo."
                            },
                            {
                               "enum":[
                                  "generic"
                               ],
                               "description":"Generic channel logo."
                            }
                         ]
                      },
                      "caption":{
                         "type":"string",
                         "description":"Caption for the image file, commonly the dimensions in pixels and the color category."
                      },
                      "credit":{
                         "type":"string",
                         "description":"Person or company credited with creating the logo, in up to 255 characters."
                      },
                      "owner":{
                         "type":"string",
                         "description":"Legal owner of the image."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description":"ID to use to get information about this resource."
                            },
                            "me":{
                               "type":"string",
                               "description":"URI template to use to get information about this resource."
                            },
                            "parent":{
                               "type":"string",
                               "description":"URI template for information about the parent resource."
                            },
                            "children":{
                               "type":"array",
                               "description":"URI templates for child resources."
                            }
                         },
                         "required":[
                            "id",
                            "me"
                         ]
                      }
                   },
                   "required":[
                      "ref"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_source_logos/best [/data_source_logos/best?id={id}&id2={id2}&id3={id3}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the best logo for each of up to three TV channels, as determined by five possible image metadata filters.

To deliver a logo specified by the response to this request, grab the `media_logo ID` for that logo and then call [media_logo](/#reference/image/medialogo).

## GET
This request requires the `data_source_logos` ID for the source of programming on the channel, which is returned by the following requests. A `data_source_logos` ID for a source is the same as the `data_source` ID.
+ [data_source](/#reference/tv-schedule/datasource)
+ [data_service_channels/bulk](/#reference/tv-schedule/dataservicechannelsbulk)
+ [data_service_channels/single](/#reference/tv-schedule/dataservicechannelssingle)
+ [data_service_channels/screen](/#reference/tv-schedule/dataservicechannelsscreen)

Note: When specifying more than one `data_source_logos` ID, specify the IDs in ascending numerical order.

+ Parameters
  + id (required, integer, `69047711`)
    The `data_source_logos` ID for the source of programming on the channel, which is returned by the following requests. A `data_source_logos` ID for a source is the same as the `data_source` ID.
      + [data_source](/#reference/tv-schedule/datasource)
      + [data_service_channels/bulk](/#reference/tv-schedule/dataservicechannelsbulk)
      + [data_service_channels/single](/#reference/tv-schedule/dataservicechannelssingle)
      + [data_service_channels/screen](/#reference/tv-schedule/dataservicechannelsscreen)

  + id2 (optional, integer, `69048687`)
    The `data_source_logos` ID for a second TV channel. This ID must be greater than the value of {id}.
  + id3 (optional, integer, `69049209`)
    The `data_source_logos` ID for a third TV channel. This ID must be greater than the value of {id2}.
  + by (optional, string, `id`)
    Response field to sort by. Only top-level response fields are valid, not objects or fields in objects.
     +  For an ascending sort, replace {by} with the field name like this: *id*. For a descending sort, precede the field name with a minus (-) sign like this: *-id*.
     +  To insert a value at the top of the sort, replace {by} with the field and value, like this: "caption=122x66; black".
     +  To filter out a value, precede the value with an exclamation like this: "caption=!122x66; black".

  + by2 (optional, string, `caption`)
    Second level sort specification.
  + by3 (optional, string, `type`)
    Third level sort specification.
  + by4 (optional, string, `type`)
    Fourth level sort specification.
  + by5 (optional, string, `type`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"source_logos",
       "description":"Information about logo files associated with a source of programming on a television channel.",
       "additionalProperties":{
          "type":"object",
          "properties":{
             "logos":{
                "type":"object",
                "description":"Logos associated with the source.",
                "properties":{
                   "in":{
                      "type":"string",
                      "description":"Language of the logo, stated as a two-character, ISO 639 language code."
                   },
                   "type":{
                      "type":"string",
                      "description":"Type of logo.",
                      "oneOf":[
                         {
                            "enum":[
                               "jersey"
                            ],
                            "description":"Sports jersey logo."
                         },
                         {
                            "enum":[
                               "league"
                            ],
                            "description":"Sports league logo."
                         },
                         {
                            "enum":[
                               "mso"
                            ],
                            "description":"MSO branding logo."
                         },
                         {
                            "enum":[
                               "provider"
                            ],
                            "description":"MSO logo."
                         },
                         {
                            "enum":[
                               "source"
                            ],
                            "description":"Logo for the source of programming on a television channel."
                         },
                         {
                            "enum":[
                               "team"
                            ],
                            "description":"Sports team logo."
                         },
                         {
                            "enum":[
                               "generic"
                            ],
                            "description":"Generic channel logo."
                         }
                      ]
                   },
                   "caption":{
                      "type":"string",
                      "description":"Caption for the image file, commonly the dimensions in pixels and the color category."
                   },
                   "credit":{
                      "type":"string",
                      "description":"Person or company credited with creating the logo, in up to 255 characters."
                   },
                   "owner":{
                      "type":"string",
                      "description":"Legal owner of the image."
                   },
                   "ref":{
                      "type":"object",
                      "properties":{
                         "id":{
                            "type":"integer",
                            "description":"ID to use to get information about this resource."
                         },
                         "me":{
                            "type":"string",
                            "description":"URI template to use to get information about this resource."
                         },
                         "parent":{
                            "type":"string",
                            "description":"URI template for information about the parent resource."
                         },
                         "children":{
                            "type":"array",
                            "description":"URI templates for child resources."
                         }
                      },
                      "required":[
                         "id",
                         "me"
                      ]
                   }
                },
                "required":[
                   "ref"
                ]
             },
             "ref":{
                "type":"object",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description":"ID to use to get information about this resource."
                   },
                   "me":{
                      "type":"string",
                      "description":"URI template to use to get information about this resource."
                   },
                   "parent":{
                      "type":"string",
                      "description":"URI template for information about the parent resource."
                   },
                   "children":{
                      "type":"array",
                      "description":"URI templates for child resources."
                   }
                },
                "required":[
                   "id",
                   "me"
                ]
             },
             "page":{
                "type":"integer",
                "description":"Page number of the response."
             },
             "size":{
                "type":"integer",
                "description":"Number of elements in this page."
             },
             "total":{
                "type":"integer",
                "description":"Total number of elements available."
             }
          },
          "required":[
             "ref"
          ]
       }
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# media_logo [/media_logo?id={id}&style={style}]
Returns a channel logo that has a transparent background in PNG file format.

## GET
This request requires the `media_logo` ID for the logo, which is returned in responses to the following requests:
+ [data_source_logos/best](/#reference/image/datasourcelogosbest)
+ [data_source_logos/collection](/#reference/image/datasourcelogoscollection)

+ Parameters
  + id (required, string, `290840530`) ...
    The `media_logo` ID for the logo, returned in a response to the following requests:
       + [data_source_logos/best](/#reference/image/datasourcelogosbest)
       + [data_source_logos/collection](/#reference/image/datasourcelogoscollection)

  + style (required, string, `large`)
    Preferred style, as shown in the following table. Width and height define a bounding box that logos fill in one or both dimensions.
    <table><tr>
    <th>Style</th>
    <th>Width</th>
    <th>Height</th>
    <th>Color</th>
    </tr><tr>
    <td>white</td>
    <td><p>122 pixels</p></td>
    <td><p>66 pixels</p></td>
    <td><p>white text</p></td>
    </tr><tr>
    <td>black</td>
    <td><p>122 pixels</p></td>
    <td><p>66 pixels</p></td>
    <td><p>black text</p></td>
    </tr><tr>
    <td>small</td>
    <td><p>92 pixels</p></td>
    <td><p>36 pixels</p></td>
    <td><p>color</p></td>
    </tr><tr>
    <td>medium</td>
    <td><p>122 pixels</p></td>
    <td><p>66 pixels</p></td>
    <td><p>black or white</p></td>
    </tr><tr>
    <td>large</td>
    <td><p>140 pixels</p></td>
    <td><p>140 pixels</p></td>
    <td><p>color</p></td>
    </tr></table>

+ Response 200 (application/json)

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_content_images/collection [/data_content_images/collection?id={id}&page={page}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the images available for an airing, movie, series, season, episode, or other.

To deliver an image specified in the response, grab the `media_image` ID for the image you want from the response and then call one of these requests:
+ [media_image/sized](/#reference/image/mediaimagesized)
+ [media_image/master](/#reference/image/mediaimagemaster)

## GET
This request requires a `data_content_images` ID, which is returned in links in responses to the following requests. A `data_content_images` ID is the same as the ID for each of these requests.
+  [data_other](/#reference/other/dataother)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie](/#reference/movie/datamovie)
+  [data_series](/#reference/series/dataseries)
+  [data_season](/#reference/season/dataseason)
+  [data_episode](/#reference/episode/dataepisode)

+ Parameters
  + id (required, integer, `914806985`)
    A `data_content_images` ID, returned in responses to the following requests:
      +  [data_other](/#reference/other/dataother)
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie](/#reference/movie/datamovie)
      +  [data_series](/#reference/series/dataseries)
      +  [data_season](/#reference/season/dataseason)
      +  [data_episode](/#reference/episode/dataepisode)

  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"content_images",
       "description":"Information about images related to a movie or TV program.",
       "properties":{
          "images":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Image information.",
                   "properties":{
                      "in":{
                         "type":"string"
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of image.",
                         "oneOf":[
                            {
                               "enum":[
                                  "album"
                               ],
                               "description":"Album cover front."
                            },
                            {
                               "enum":[
                                  "album2"
                               ],
                               "description":"Album cover back."
                            },
                            {
                               "enum":[
                                  "athlete"
                               ],
                               "description":"Athlete image."
                            },
                            {
                               "enum":[
                                  "box"
                               ],
                               "description":"VHS box cover."
                            },
                            {
                               "enum":[
                                  "celebrity"
                               ],
                               "description":"Celebrity."
                            },
                            {
                               "enum":[
                                  "dvd"
                               ],
                               "description":"DVD box cover."
                            },
                            {
                               "enum":[
                                  "gallery"
                               ],
                               "description":"Key cast, no set."
                            },
                            {
                               "enum":[
                                  "gallery2"
                               ],
                               "description":"Supporting cast, no set."
                            },
                            {
                               "enum":[
                                  "generic"
                               ],
                               "description":"Placeholder iconography or photograph."
                            },
                            {
                               "enum":[
                                  "group"
                               ],
                               "description":"Over four cast members."
                            },
                            {
                               "enum":[
                                  "head"
                               ],
                               "description":"One key cast member."
                            },
                            {
                               "enum":[
                                  "head2"
                               ],
                               "description":"One supporting cast member."
                            },
                            {
                               "enum":[
                                  "jersey"
                               ],
                               "description":"Sports jersey."
                            },
                            {
                               "enum":[
                                  "key"
                               ],
                               "description":"Key cast or show image."
                            },
                            {
                               "enum":[
                                  "league"
                               ],
                               "description":"Sports league logo."
                            },
                            {
                               "enum":[
                                  "olympic"
                               ],
                               "description":"Olympic image."
                            },
                            {
                               "enum":[
                                  "poster"
                               ],
                               "description":"Poster art."
                            },
                            {
                               "enum":[
                                  "prod"
                               ],
                               "description":"Key cast on set."
                            },
                            {
                               "enum":[
                                  "prod2"
                               ],
                               "description":"Supporting cast on set."
                            },
                            {
                               "enum":[
                                  "program"
                               ],
                               "description":"Key cast from program."
                            },
                            {
                               "enum":[
                                  "program2"
                               ],
                               "description":"Supporting cast from program."
                            },
                            {
                               "enum":[
                                  "set"
                               ],
                               "description":"DVD box set cover."
                            },
                            {
                               "enum":[
                                  "showcard"
                               ],
                               "description":"TV series poster."
                            },
                            {
                               "enum":[
                                  "team"
                               ],
                               "description":"Sports team logo."
                            },
                            {
                               "enum":[
                                  "team2"
                               ],
                               "description":"Sports team secondary logo."
                            },
                            {
                               "enum":[
                                  "trailer"
                               ],
                               "description":"Image for trailer, 16:9."
                            },
                            {
                               "enum":[
                                  "video"
                               ],
                               "description":"Video box cover."
                            }
                         ]
                      },
                      "caption":{
                         "type":"string",
                         "description":"Image caption."
                      },
                      "credit":{
                         "type":"string",
                         "description":"Person or company credited with taking the photograph."
                      },
                      "owner":{
                         "type":"string",
                         "description":"Legal owner of the image."
                      },
                      "zoom":{
                         "type":"string",
                         "description":"How much of the subject appears in the picture.",
                         "oneOf":[
                            {
                               "enum":[
                                  "head"
                               ],
                               "description":"Head or shoulders to top of head."
                            },
                            {
                               "enum":[
                                  "torso"
                               ],
                               "description":"Chest or thigh to top of head."
                            },
                            {
                               "enum":[
                                  "body"
                               ],
                               "description":"Body fills at least 80% of frame."
                            },
                            {
                               "enum":[
                                  "framed"
                               ],
                               "description":"Full body fills 50% to 80% of frame."
                            },
                            {
                               "enum":[
                                  "std"
                               ],
                               "description":"Full body fills 50% of frame or less."
                            }
                         ]
                      },
                      "people":{
                         "type":"integer",
                         "description":"Number of people in the image."
                      },
                      "weight":{
                         "type":"number",
                         "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description":"ID to use to get information about this resource."
                            },
                            "me":{
                               "type":"string",
                               "description":"URI template to use to get information about this resource."
                            },
                            "parent":{
                               "type":"string",
                               "description":"URI template for information about the parent resource."
                            },
                            "children":{
                               "type":"array",
                               "description":"URI templates for child resources."
                            }
                         },
                         "required":[
                            "id",
                            "me"
                         ]
                      }
                   },
                   "required":[
                      "zoom",
                      "ref"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_content_images/best [/data_content_images/best?id={id}&id2={id2}&id3={id3}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the best image for each of up to three airings, movies, series, seasons, episodes, or other, as determined by five possible image metadata filters.

To deliver an image specified in the response, grab the `media_image` ID for the image you want from the response and then call one these requests:
+ [media_image/sized](/#reference/image/mediaimagesized)
+ [media_image/master](/#reference/image/mediaimagemaster)

## GET
This request requires one or more `data_content_images` IDs, which are returned in links in responses to the following requests. A `data_content_images` ID is the same as the ID for each of these requests.
+  [data_other](/#reference/other/dataother)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie](/#reference/movie/datamovie)
+  [data_series](/#reference/series/dataseries)
+  [data_season](/#reference/season/dataseason)
+  [data_episode](/#reference/episode/dataepisode)

Note:  The {by} parameters can sort results by value of response fields. The most useful response fields to sort are:

`people` &emsp; Number of people in the image.

`weight` &emsp; Prominance of cast members in the image, where:
+  zero means no cast members
+  a higher number means fewer and less prominent cast members
+  a lower number means more and more prominent cast members

`zoom` &emsp; Maximum zoom level, or close-up level, of the image:

| Zoom Level | Description                           |
| ---------- | ------------------------------------- |
| head       | Head or shoulders to top of head.     |
| torso      | Chest or thigh to top of head.        |
| body       | Body fills at least 80% of frame.     |
| framed     | Full body fills 50% to 80% of frame.  |
| std        | Full body fills 50% of frame or less. |

`type` &emsp; Type of image:

| Image Type | Description                | Image Type | Description                  |
| ---------- | -------------------------- | ---------- | --------------------------   |
| album      | Album cover front          | key        | Key cast or show image       |
| album2     | Album cover back           | league     | Sports league logo           |
| box        | VHS box cover              | olympic    | Olympic image                |
| celebrity  | Celebrity                  | poster     | Poster art                   |
| dvd        | DVD box cover              | prod       | Key cast on set              |
| gallery    | Key cast, no set           | prod2      | Supporting cast on set       |
| gallery2   | Supporting cast, no set    | program    | Key cast from program        |
| generic    | Placeholder iconography    | program2   | Supporting cast from program |
| generic2   | Placeholder photograph     | set        | DVD box set cover            |
| group      | Over four cast members     | showcard   | TV series poster             |
| head       | One key cast member        | team       | Sports team logo             |
| head2      | One supporting cast member | trailer    | Image for trailer, 16:9      |
| jersey     | Sports jersey              | video      | Video box cover              |

+ Parameters
  + id (required, integer, `914806985`)
    A `data_content_images` ID, returned in responses to the following requests. A `data_content_images` ID is the same as the ID for each of these requests.
      +  [data_other](/#reference/other/dataother)
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie](/#reference/movie/datamovie)
      +  [data_series](/#reference/series/dataseries)
      +  [data_season](/#reference/season/dataseason)
      +  [data_episode](/#reference/episode/dataepisode)

  + id2 (optional, integer, `916717280`)
    A second `data_content_images` ID for a movie or TV program.
  + id3 (optional, integer, `916638563`)
    A third `data_content_images` ID for a movie or TV program.
  + by (optional, string, `people`)
    Response field to sort by. Only top-level response fields are valid, not objects or fields in objects.
      +  For an ascending sort, replace {by} with the field name like this: *people*. For a descending sort, precede the field name with a minus (-) sign like this: *-people*.
      +  To insert a value at the top of the sort, replace {by} with the field and value, like this: *zoom=head*.
      +  To filter out a value, precede the value with an exclamation like this: "weight=!0".

  + by2 (optional, string, `type=key`)
    Second level sort specification.
  + by3 (optional, string, `type`)
    Third level sort specification.
  + by4 (optional, string, `zoom`)
    Fourth level sort specification.
  + by5 (optional, string, `zoom`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"content_images",
       "description":"Information about images related to a movie or TV program.",
       "additionalProperties":{
          "type":"object",
          "properties":{
             "images":{
                "type":"object",
                "description":"Image information.",
                "properties":{
                   "in":{
                      "type":"string"
                   },
                   "type":{
                      "type":"string",
                      "description":"Type of image.",
                      "oneOf":[
                         {
                            "enum":[
                               "album"
                            ],
                            "description":"Album cover front."
                         },
                         {
                            "enum":[
                               "album2"
                            ],
                            "description":"Album cover back."
                         },
                         {
                            "enum":[
                               "athlete"
                            ],
                            "description":"Athlete image."
                         },
                         {
                            "enum":[
                               "box"
                            ],
                            "description":"VHS box cover."
                         },
                         {
                            "enum":[
                               "celebrity"
                            ],
                            "description":"Celebrity."
                         },
                         {
                            "enum":[
                               "dvd"
                            ],
                            "description":"DVD box cover."
                         },
                         {
                            "enum":[
                               "gallery"
                            ],
                            "description":"Key cast, no set."
                         },
                         {
                            "enum":[
                               "gallery2"
                            ],
                            "description":"Supporting cast, no set."
                         },
                         {
                            "enum":[
                               "generic"
                            ],
                            "description":"Placeholder iconography or photograph."
                         },
                         {
                            "enum":[
                               "group"
                            ],
                            "description":"Over four cast members."
                         },
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"One key cast member."
                         },
                         {
                            "enum":[
                               "head2"
                            ],
                            "description":"One supporting cast member."
                         },
                         {
                            "enum":[
                               "jersey"
                            ],
                            "description":"Sports jersey."
                         },
                         {
                            "enum":[
                               "key"
                            ],
                            "description":"Key cast or show image."
                         },
                         {
                            "enum":[
                               "league"
                            ],
                            "description":"Sports league logo."
                         },
                         {
                            "enum":[
                               "olympic"
                            ],
                            "description":"Olympic image."
                         },
                         {
                            "enum":[
                               "poster"
                            ],
                            "description":"Poster art."
                         },
                         {
                            "enum":[
                               "prod"
                            ],
                            "description":"Key cast on set."
                         },
                         {
                            "enum":[
                               "prod2"
                            ],
                            "description":"Supporting cast on set."
                         },
                         {
                            "enum":[
                               "program"
                            ],
                            "description":"Key cast from program."
                         },
                         {
                            "enum":[
                               "program2"
                            ],
                            "description":"Supporting cast from program."
                         },
                         {
                            "enum":[
                               "set"
                            ],
                            "description":"DVD box set cover."
                         },
                         {
                            "enum":[
                               "showcard"
                            ],
                            "description":"TV series poster."
                         },
                         {
                            "enum":[
                               "team"
                            ],
                            "description":"Sports team logo."
                         },
                         {
                            "enum":[
                               "team2"
                            ],
                            "description":"Sports team secondary logo."
                         },
                         {
                            "enum":[
                               "trailer"
                            ],
                            "description":"Image for trailer, 16:9."
                         },
                         {
                            "enum":[
                               "video"
                            ],
                            "description":"Video box cover."
                         }
                      ]
                   },
                   "caption":{
                      "type":"string",
                      "description":"Image caption."
                   },
                   "credit":{
                      "type":"string",
                      "description":"Person or company credited with taking the photograph."
                   },
                   "owner":{
                      "type":"string",
                      "description":"Legal owner of the image."
                   },
                   "zoom":{
                      "type":"string",
                      "description":"How much of the subject appears in the picture.",
                      "oneOf":[
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"Head or shoulders to top of head."
                         },
                         {
                            "enum":[
                               "torso"
                            ],
                            "description":"Chest or thigh to top of head."
                         },
                         {
                            "enum":[
                               "body"
                            ],
                            "description":"Body fills at least 80% of frame."
                         },
                         {
                            "enum":[
                               "framed"
                            ],
                            "description":"Full body fills 50% to 80% of frame."
                         },
                         {
                            "enum":[
                               "std"
                            ],
                            "description":"Full body fills 50% of frame or less."
                         }
                      ]
                   },
                   "people":{
                      "type":"integer",
                      "description":"Number of people in the image."
                   },
                   "weight":{
                      "type":"number",
                      "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                   },
                   "ref":{
                      "type":"object",
                      "properties":{
                         "id":{
                            "type":"integer",
                            "description":"ID to use to get information about this resource."
                         },
                         "me":{
                            "type":"string",
                            "description":"URI template to use to get information about this resource."
                         },
                         "parent":{
                            "type":"string",
                            "description":"URI template for information about the parent resource."
                         },
                         "children":{
                            "type":"array",
                            "description":"URI templates for child resources."
                         }
                      },
                      "required":[
                         "id",
                         "me"
                      ]
                   }
                },
                "required":[
                   "zoom",
                   "ref"
                ]
             },
             "ref":{
                "type":"object",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description":"ID to use to get information about this resource."
                   },
                   "me":{
                      "type":"string",
                      "description":"URI template to use to get information about this resource."
                   },
                   "parent":{
                      "type":"string",
                      "description":"URI template for information about the parent resource."
                   },
                   "children":{
                      "type":"array",
                      "description":"URI templates for child resources."
                   }
                },
                "required":[
                   "id",
                   "me"
                ]
             },
             "page":{
                "type":"integer",
                "description":"Page number of the response."
             },
             "size":{
                "type":"integer",
                "description":"Number of elements in this page."
             },
             "total":{
                "type":"integer",
                "description":"Total number of elements available."
             }
          },
          "required":[
             "ref"
          ]
       }
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_release_images/collection [/data_release_images/collection?id={id}&page={page}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the images available for a release of a movie, episode, or other show.

To deliver an image specified in the response, grab the `media_image` ID for the image you want from the response and then call one of these requests:
+ [media_image/sized](/#reference/image/mediaimagesized)
+ [media_image/master](/#reference/image/mediaimagemaster)

## GET
This request requires a `data_release_images` ID for a release. A `data_release_images` ID is the same as the `data_release` ID for the release.

+ Parameters
  + id (required, integer, `982759625`)
    A `data_release_images` ID for a release of a movie, episode, or other show. A `data_release_images` ID is the same as the `data_release` ID for the release.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"release_images",
       "description":"Information about images related to a release of a movie, episode, or other show.",
       "additionalProperties":{
          "type":"object",
          "properties":{
             "images":{
                "type":"object",
                "description":"Image information.",
                "properties":{
                   "in":{
                      "type":"string"
                   },
                   "type":{
                      "type":"string",
                      "description":"Type of image.",
                      "oneOf":[
                         {
                            "enum":[
                               "album"
                            ],
                            "description":"Album cover front."
                         },
                         {
                            "enum":[
                               "album2"
                            ],
                            "description":"Album cover back."
                         },
                         {
                            "enum":[
                               "athlete"
                            ],
                            "description":"Athlete image."
                         },
                         {
                            "enum":[
                               "box"
                            ],
                            "description":"VHS box cover."
                         },
                         {
                            "enum":[
                               "celebrity"
                            ],
                            "description":"Celebrity."
                         },
                         {
                            "enum":[
                               "dvd"
                            ],
                            "description":"DVD box cover."
                         },
                         {
                            "enum":[
                               "gallery"
                            ],
                            "description":"Key cast, no set."
                         },
                         {
                            "enum":[
                               "gallery2"
                            ],
                            "description":"Supporting cast, no set."
                         },
                         {
                            "enum":[
                               "generic"
                            ],
                            "description":"Placeholder iconography or photograph."
                         },
                         {
                            "enum":[
                               "group"
                            ],
                            "description":"Over four cast members."
                         },
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"One key cast member."
                         },
                         {
                            "enum":[
                               "head2"
                            ],
                            "description":"One supporting cast member."
                         },
                         {
                            "enum":[
                               "jersey"
                            ],
                            "description":"Sports jersey."
                         },
                         {
                            "enum":[
                               "key"
                            ],
                            "description":"Key cast or show image."
                         },
                         {
                            "enum":[
                               "league"
                            ],
                            "description":"Sports league logo."
                         },
                         {
                            "enum":[
                               "olympic"
                            ],
                            "description":"Olympic image."
                         },
                         {
                            "enum":[
                               "poster"
                            ],
                            "description":"Poster art."
                         },
                         {
                            "enum":[
                               "prod"
                            ],
                            "description":"Key cast on set."
                         },
                         {
                            "enum":[
                               "prod2"
                            ],
                            "description":"Supporting cast on set."
                         },
                         {
                            "enum":[
                               "program"
                            ],
                            "description":"Key cast from program."
                         },
                         {
                            "enum":[
                               "program2"
                            ],
                            "description":"Supporting cast from program."
                         },
                         {
                            "enum":[
                               "set"
                            ],
                            "description":"DVD box set cover."
                         },
                         {
                            "enum":[
                               "showcard"
                            ],
                            "description":"TV series poster."
                         },
                         {
                            "enum":[
                               "team"
                            ],
                            "description":"Sports team logo."
                         },
                         {
                            "enum":[
                               "team2"
                            ],
                            "description":"Sports team secondary logo."
                         },
                         {
                            "enum":[
                               "trailer"
                            ],
                            "description":"Image for trailer, 16:9."
                         },
                         {
                            "enum":[
                               "video"
                            ],
                            "description":"Video box cover."
                         }
                      ]
                   },
                   "caption":{
                      "type":"string",
                      "description":"Image caption."
                   },
                   "credit":{
                      "type":"string",
                      "description":"Person or company credited with taking the photograph."
                   },
                   "owner":{
                      "type":"string",
                      "description":"Legal owner of the image."
                   },
                   "zoom":{
                      "type":"string",
                      "description":"How much of the subject appears in the picture.",
                      "oneOf":[
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"Head or shoulders to top of head."
                         },
                         {
                            "enum":[
                               "torso"
                            ],
                            "description":"Chest or thigh to top of head."
                         },
                         {
                            "enum":[
                               "body"
                            ],
                            "description":"Body fills at least 80% of frame."
                         },
                         {
                            "enum":[
                               "framed"
                            ],
                            "description":"Full body fills 50% to 80% of frame."
                         },
                         {
                            "enum":[
                               "std"
                            ],
                            "description":"Full body fills 50% of frame or less."
                         }
                      ]
                   },
                   "people":{
                      "type":"integer",
                      "description":"Number of people in the image."
                   },
                   "weight":{
                      "type":"number",
                      "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                   },
                   "ref":{
                      "type":"object",
                      "properties":{
                         "id":{
                            "type":"integer",
                            "description":"ID to use to get information about this resource."
                         },
                         "me":{
                            "type":"string",
                            "description":"URI template to use to get information about this resource."
                         },
                         "parent":{
                            "type":"string",
                            "description":"URI template for information about the parent resource."
                         },
                         "children":{
                            "type":"array",
                            "description":"URI templates for child resources."
                         }
                      },
                      "required":[
                         "id",
                         "me"
                      ]
                   }
                },
                "required":[
                   "zoom",
                   "ref"
                ]
             },
             "ref":{
                "type":"object",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description":"ID to use to get information about this resource."
                   },
                   "me":{
                      "type":"string",
                      "description":"URI template to use to get information about this resource."
                   },
                   "parent":{
                      "type":"string",
                      "description":"URI template for information about the parent resource."
                   },
                   "children":{
                      "type":"array",
                      "description":"URI templates for child resources."
                   }
                },
                "required":[
                   "id",
                   "me"
                ]
             },
             "page":{
                "type":"integer",
                "description":"Page number of the response."
             },
             "size":{
                "type":"integer",
                "description":"Number of elements in this page."
             },
             "total":{
                "type":"integer",
                "description":"Total number of elements available."
             }
          },
          "required":[
             "ref"
          ]
       }
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_release_images/best [/data_release_images/best?id={id}&id2={id2}&id3={id3}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the best image for each of up to three releases, as determined by five possible image metadata filters.

To deliver an image specified in the response, grab the `media_image` ID for the image you want from the response and then call one these requests:
+ [media_image/sized](/#reference/image/mediaimagesized)
+ [media_image/master](/#reference/image/mediaimagemaster)

## GET
This request requires one or more `data_release_images` IDs. A `data_release_images` ID is the same as the `data_release` ID for a release.

Note:  The {by} parameters can sort results by value of response fields. The most useful response fields to sort are:

`people` &emsp; Number of people in the image.

`weight` &emsp; Prominance of cast members in the image, where:
+  zero means no cast members
+  a higher number means fewer and less prominent cast members
+  a lower number means more and more prominent cast members

`zoom` &emsp; Maximum zoom level, or close-up level, of the image:

| Zoom Level | Description                           |
| ---------- | ------------------------------------- |
| head       | Head or shoulders to top of head.     |
| torso      | Chest or thigh to top of head.        |
| body       | Body fills at least 80% of frame.     |
| framed     | Full body fills 50% to 80% of frame.  |
| std        | Full body fills 50% of frame or less. |

`type` &emsp; Type of image:

| Image Type | Description                | Image Type | Description                  |
| ---------- | -------------------------- | ---------- | --------------------------   |
| album      | Album cover front          | key        | Key cast or show image       |
| album2     | Album cover back           | league     | Sports league logo           |
| box        | VHS box cover              | olympic    | Olympic image                |
| celebrity  | Celebrity                  | poster     | Poster art                   |
| dvd        | DVD box cover              | prod       | Key cast on set              |
| gallery    | Key cast, no set           | prod2      | Supporting cast on set       |
| gallery2   | Supporting cast, no set    | program    | Key cast from program        |
| generic    | Placeholder iconography    | program2   | Supporting cast from program |
| generic2   | Placeholder photograph     | set        | DVD box set cover            |
| group      | Over four cast members     | showcard   | TV series poster             |
| head       | One key cast member        | team       | Sports team logo             |
| head2      | One supporting cast member | trailer    | Image for trailer, 16:9      |
| jersey     | Sports jersey              | video      | Video box cover              |

+ Parameters
  + id (required, integer, `13554857`)
    A `data_release_images` ID for a release of a movie, episode, or other show. A `data_release_images` ID is the same as the `data_release` ID for the release.
  + id2 (optional, integer, `373544356`)
    A second `data_release_images` ID for a release.
  + id3 (optional, integer, `982759625`)
    A third `data_release_images` ID for a release.
  + by (optional, string, `people`)
    Response field to sort by. Only top-level response fields are valid, not objects or fields in objects.
      +  For an ascending sort, replace {by} with the field name like this: *people*. For a descending sort, precede the field name with a minus (-) sign like this: *-people*.
      +  To insert a value at the top of the sort, replace {by} with the field and value, like this: *zoom=head*.
      +  To filter out a value, precede the value with an exclamation like this: "weight=!0".

  + by2 (optional, string, `type=key`)
    Second level sort specification.
  + by3 (optional, string, `type`)
    Third level sort specification.
  + by4 (optional, string, `zoom`)
    Fourth level sort specification.
  + by5 (optional, string, `zoom`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"release_images",
       "description":"Information about images related to a release of a movie, episode, or other show.",
       "additionalProperties":{
          "type":"object",
          "properties":{
             "images":{
                "type":"object",
                "description":"Image information.",
                "properties":{
                   "in":{
                      "type":"string"
                   },
                   "type":{
                      "type":"string",
                      "description":"Type of image.",
                      "oneOf":[
                         {
                            "enum":[
                               "album"
                            ],
                            "description":"Album cover front."
                         },
                         {
                            "enum":[
                               "album2"
                            ],
                            "description":"Album cover back."
                         },
                         {
                            "enum":[
                               "athlete"
                            ],
                            "description":"Athlete image."
                         },
                         {
                            "enum":[
                               "box"
                            ],
                            "description":"VHS box cover."
                         },
                         {
                            "enum":[
                               "celebrity"
                            ],
                            "description":"Celebrity."
                         },
                         {
                            "enum":[
                               "dvd"
                            ],
                            "description":"DVD box cover."
                         },
                         {
                            "enum":[
                               "gallery"
                            ],
                            "description":"Key cast, no set."
                         },
                         {
                            "enum":[
                               "gallery2"
                            ],
                            "description":"Supporting cast, no set."
                         },
                         {
                            "enum":[
                               "generic"
                            ],
                            "description":"Placeholder iconography or photograph."
                         },
                         {
                            "enum":[
                               "group"
                            ],
                            "description":"Over four cast members."
                         },
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"One key cast member."
                         },
                         {
                            "enum":[
                               "head2"
                            ],
                            "description":"One supporting cast member."
                         },
                         {
                            "enum":[
                               "jersey"
                            ],
                            "description":"Sports jersey."
                         },
                         {
                            "enum":[
                               "key"
                            ],
                            "description":"Key cast or show image."
                         },
                         {
                            "enum":[
                               "league"
                            ],
                            "description":"Sports league logo."
                         },
                         {
                            "enum":[
                               "olympic"
                            ],
                            "description":"Olympic image."
                         },
                         {
                            "enum":[
                               "poster"
                            ],
                            "description":"Poster art."
                         },
                         {
                            "enum":[
                               "prod"
                            ],
                            "description":"Key cast on set."
                         },
                         {
                            "enum":[
                               "prod2"
                            ],
                            "description":"Supporting cast on set."
                         },
                         {
                            "enum":[
                               "program"
                            ],
                            "description":"Key cast from program."
                         },
                         {
                            "enum":[
                               "program2"
                            ],
                            "description":"Supporting cast from program."
                         },
                         {
                            "enum":[
                               "set"
                            ],
                            "description":"DVD box set cover."
                         },
                         {
                            "enum":[
                               "showcard"
                            ],
                            "description":"TV series poster."
                         },
                         {
                            "enum":[
                               "team"
                            ],
                            "description":"Sports team logo."
                         },
                         {
                            "enum":[
                               "team2"
                            ],
                            "description":"Sports team secondary logo."
                         },
                         {
                            "enum":[
                               "trailer"
                            ],
                            "description":"Image for trailer, 16:9."
                         },
                         {
                            "enum":[
                               "video"
                            ],
                            "description":"Video box cover."
                         }
                      ]
                   },
                   "caption":{
                      "type":"string",
                      "description":"Image caption."
                   },
                   "credit":{
                      "type":"string",
                      "description":"Person or company credited with taking the photograph."
                   },
                   "owner":{
                      "type":"string",
                      "description":"Legal owner of the image."
                   },
                   "zoom":{
                      "type":"string",
                      "description":"How much of the subject appears in the picture.",
                      "oneOf":[
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"Head or shoulders to top of head."
                         },
                         {
                            "enum":[
                               "torso"
                            ],
                            "description":"Chest or thigh to top of head."
                         },
                         {
                            "enum":[
                               "body"
                            ],
                            "description":"Body fills at least 80% of frame."
                         },
                         {
                            "enum":[
                               "framed"
                            ],
                            "description":"Full body fills 50% to 80% of frame."
                         },
                         {
                            "enum":[
                               "std"
                            ],
                            "description":"Full body fills 50% of frame or less."
                         }
                      ]
                   },
                   "people":{
                      "type":"integer",
                      "description":"Number of people in the image."
                   },
                   "weight":{
                      "type":"number",
                      "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                   },
                   "ref":{
                      "type":"object",
                      "properties":{
                         "id":{
                            "type":"integer",
                            "description":"ID to use to get information about this resource."
                         },
                         "me":{
                            "type":"string",
                            "description":"URI template to use to get information about this resource."
                         },
                         "parent":{
                            "type":"string",
                            "description":"URI template for information about the parent resource."
                         },
                         "children":{
                            "type":"array",
                            "description":"URI templates for child resources."
                         }
                      },
                      "required":[
                         "id",
                         "me"
                      ]
                   }
                },
                "required":[
                   "zoom",
                   "ref"
                ]
             },
             "ref":{
                "type":"object",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description":"ID to use to get information about this resource."
                   },
                   "me":{
                      "type":"string",
                      "description":"URI template to use to get information about this resource."
                   },
                   "parent":{
                      "type":"string",
                      "description":"URI template for information about the parent resource."
                   },
                   "children":{
                      "type":"array",
                      "description":"URI templates for child resources."
                   }
                },
                "required":[
                   "id",
                   "me"
                ]
             },
             "page":{
                "type":"integer",
                "description":"Page number of the response."
             },
             "size":{
                "type":"integer",
                "description":"Number of elements in this page."
             },
             "total":{
                "type":"integer",
                "description":"Total number of elements available."
             }
          },
          "required":[
             "ref"
          ]
       }
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_name_images/collection [/data_name_images/collection?id={id}&page={page}&in={in}&in2={in2}&in3={in3}]
Returns metadata about images of a team, person, or organization.

To deliver an image specified in the response, grab the `media_image` ID for the image you want from the response and then call one of these requests.
+ [media_image/sized](/#reference/image/mediaimagesized)
+ [media_image/master](/#reference/image/mediaimagemaster)

## GET
This request requires a `data_name_images` ID, which is returned in links in responses to [data_person](/#reference/tv-and-movie-data/dataperson) requests. A `data_name_images` ID is the same as the `data_person` ID for a person.

+ Parameters
  + id (required, integer, `6779589`)
    A `data_name_images` ID, returned in a response to a [data_person](/#reference/tv-and-movie-data/dataperson) request. A `data_name_images` ID is the same as the `data_person` ID for a person.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"name_images",
       "description":"Information about images related to a person, team, or organization.",
       "properties":{
          "id":{
             "type":"integer",
             "description":"Rovi ID for the person, team, or organization."
          },
          "images":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Information about images related to the person, team, or organization.",
                   "properties":{
                      "id":{
                         "type":"integer",
                         "description":"Rovi ID for the image."
                      },
                      "in":{
                         "type":"string"
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of image.",
                         "oneOf":[
                            {
                               "enum":[
                                  "album"
                               ],
                               "description":"Album cover front."
                            },
                            {
                               "enum":[
                                  "album2"
                               ],
                               "description":"Album cover back."
                            },
                            {
                               "enum":[
                                  "athlete"
                               ],
                               "description":"Athlete image."
                            },
                            {
                               "enum":[
                                  "box"
                               ],
                               "description":"VHS box cover."
                            },
                            {
                               "enum":[
                                  "celebrity"
                               ],
                               "description":"Celebrity."
                            },
                            {
                               "enum":[
                                  "dvd"
                               ],
                               "description":"DVD box cover."
                            },
                            {
                               "enum":[
                                  "gallery"
                               ],
                               "description":"Key cast, no set."
                            },
                            {
                               "enum":[
                                  "gallery2"
                               ],
                               "description":"Supporting cast, no set."
                            },
                            {
                               "enum":[
                                  "generic"
                               ],
                               "description":"Placeholder iconography or photograph."
                            },
                            {
                               "enum":[
                                  "group"
                               ],
                               "description":"Over four cast members."
                            },
                            {
                               "enum":[
                                  "head"
                               ],
                               "description":"One key cast member."
                            },
                            {
                               "enum":[
                                  "head2"
                               ],
                               "description":"One supporting cast member."
                            },
                            {
                               "enum":[
                                  "jersey"
                               ],
                               "description":"Sports jersey."
                            },
                            {
                               "enum":[
                                  "key"
                               ],
                               "description":"Key cast or show image."
                            },
                            {
                               "enum":[
                                  "league"
                               ],
                               "description":"Sports league logo."
                            },
                            {
                               "enum":[
                                  "olympic"
                               ],
                               "description":"Olympic image."
                            },
                            {
                               "enum":[
                                  "poster"
                               ],
                               "description":"Poster art."
                            },
                            {
                               "enum":[
                                  "prod"
                               ],
                               "description":"Key cast on set."
                            },
                            {
                               "enum":[
                                  "prod2"
                               ],
                               "description":"Supporting cast on set."
                            },
                            {
                               "enum":[
                                  "program"
                               ],
                               "description":"Key cast from program."
                            },
                            {
                               "enum":[
                                  "program2"
                               ],
                               "description":"Supporting cast from program."
                            },
                            {
                               "enum":[
                                  "set"
                               ],
                               "description":"DVD box set cover."
                            },
                            {
                               "enum":[
                                  "showcard"
                               ],
                               "description":"TV series poster."
                            },
                            {
                               "enum":[
                                  "team"
                               ],
                               "description":"Sports team logo."
                            },
                            {
                               "enum":[
                                  "team2"
                               ],
                               "description":"Sports team secondary logo."
                            },
                            {
                               "enum":[
                                  "trailer"
                               ],
                               "description":"Image for trailer, 16:9."
                            },
                            {
                               "enum":[
                                  "video"
                               ],
                               "description":"Video box cover."
                            }
                         ]
                      },
                      "caption":{
                         "type":"string",
                         "description":"Image caption."
                      },
                      "credit":{
                         "type":"string",
                         "description":"Person or company credited with taking the photograph."
                      },
                      "owner":{
                         "type":"string",
                         "description":"Legal owner of the image."
                      },
                      "zoom":{
                         "type":"string",
                         "description":"How much of the subject appears in the picture.",
                         "oneOf":[
                            {
                               "enum":[
                                  "head"
                               ],
                               "description":"Head or shoulders to top of head."
                            },
                            {
                               "enum":[
                                  "torso"
                               ],
                               "description":"Chest or thigh to top of head."
                            },
                            {
                               "enum":[
                                  "body"
                               ],
                               "description":"Body fills at least 80% of frame."
                            },
                            {
                               "enum":[
                                  "framed"
                               ],
                               "description":"Full body fills 50% to 80% of frame."
                            },
                            {
                               "enum":[
                                  "std"
                               ],
                               "description":"Full body fills 50% of frame or less."
                            }
                         ]
                      },
                      "people":{
                         "type":"integer",
                         "description":"Number of people in the image."
                      },
                      "weight":{
                         "type":"number",
                         "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description": "ID to use to get information about this resource."
                            },
                            "me":{
                               "type":"string",
                               "description": "URI template to use to get information about this resource."
                            },
                            "parent":{
                               "type":"string",
                               "description": "URI template for information about the parent resource."
                            },
                            "children":{
                               "type":"array",
                               "description": "URI templates for child resources."
                            }
                         },
                         "required":[
                            "id",
                            "me"
                         ]
                      }
                   },
                   "required":[
                      "id",
                      "zoom",
                      "ref"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description": "ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description": "URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description": "URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description": "URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "id",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_name_images/best [/data_name_images/best?id={id}&id2={id2}&id3={id3}&by={by}&id2={by2}&id3={by3}&id4={by4}&id5={by5}&in={in}&in2={in2}&in3={in3}]
Returns metadata about the best image for each of up to three teams, people, or organizations, as determined by five possible image metadata filters.

## GET
This request requires one or more `data_name_images` IDs, which are returned in links in responses to [data_person](/#reference/tv-and-movie-data/dataperson) requests. A `data_name_images` ID is the same as the `data_person` ID for a person.

The {by} parameters filter results by response fields. The most useful response fields to filter with this parameter are:

`people` &emsp; Number of people in the image.

`zoom` &emsp; Maximum zoom level, or close-up level, of the image:

| Zoom Level | Description                           |
| ---------- | ------------------------------------- |
| head       | Head or shoulders to top of head.     |
| torso      | Chest or thigh to top of head.        |
| body       | Body fills at least 80% of frame.     |
| framed     | Full body fills 50% to 80% of frame.  |
| std        | Full body fills 50% of frame or less. |

`type` &emsp; Type of image:

| Image Type | Description                | Image Type | Description                  |
| ---------- | -------------------------- | ---------- | --------------------------   |
| album      | Album cover front          | key        | Key cast or show image       |
| album2     | Album cover back           | league     | Sports league logo           |
| box        | VHS box cover              | olympic    | Olympic image                |
| celebrity  | Celebrity                  | poster     | Poster art                   |
| dvd        | DVD box cover              | prod       | Key cast on set              |
| gallery    | Key cast, no set           | prod2      | Supporting cast on set       |
| gallery2   | Supporting cast, no set    | program    | Key cast from program        |
| generic    | Placeholder iconography    | program2   | Supporting cast from program |
| generic2   | Placeholder photograph     | set        | DVD box set cover            |
| group      | Over four cast members     | showcard   | TV series poster             |
| head       | One key cast member        | team       | Sports team logo             |
| head2      | One supporting cast member | trailer    | Image for trailer, 16:9      |
| jersey     | Sports jersey              | video      | Video box cover              |

+ Parameters
  + id (required, integer, `6778528`)
    A `data_name_images` ID, returned in a response to a [data_person](/#reference/person/dataperson) request. A `data_name_images` ID is the same as the `data_person` ID for a person.
  + id2 (optional, integer, `6779589`)
    The `data_name_images` ID for a second person, team, or organization.
  + id3 (optional, integer, `6781337`)
    The `data_name_images` ID for a second person, team, or organization.
  + by (optional, string, `people`)
    Response field to sort by. Only top-level response fields are valid, not objects or fields in objects.
      +  For an ascending sort, replace {by} with the field name like this: __people__. For a descending sort, precede the field name with a minus (-) sign like this: __-people__.
      +  To insert a value at the top of the sort, replace {by} with the field and value, like this: __zoom=head__.
      +  To filter out a value, precede the value with an exclamation like this: __zoom=!std__.

  + by2 (optional, string, `people`)
    Second level sort specification.
  + by3 (optional, string, `people`)
    Third level sort specification.
  + by4 (optional, string, `people`)
    Fourth level sort specification.
  + by5 (optional, string, `people`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"name_images",
       "description":"Information about images related to a person, team, or organization.",
       "additionalProperties":{
          "type":"object",
          "properties":{
             "id":{
                "type":"integer",
                "description":"Rovi ID for the person, team, or organization."
             },
             "images":{
                "type":"object",
                "description":"Information about images related to the person, team, or organization.",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description":"Rovi ID for the image."
                   },
                   "in":{
                      "type":"string"
                   },
                   "type":{
                      "type":"string",
                      "description":"Type of image.",
                      "oneOf":[
                         {
                            "enum":[
                               "album"
                            ],
                            "description":"Album cover front."
                         },
                         {
                            "enum":[
                               "album2"
                            ],
                            "description":"Album cover back."
                         },
                         {
                            "enum":[
                               "athlete"
                            ],
                            "description":"Athlete image."
                         },
                         {
                            "enum":[
                               "box"
                            ],
                            "description":"VHS box cover."
                         },
                         {
                            "enum":[
                               "celebrity"
                            ],
                            "description":"Celebrity."
                         },
                         {
                            "enum":[
                               "dvd"
                            ],
                            "description":"DVD box cover."
                         },
                         {
                            "enum":[
                               "gallery"
                            ],
                            "description":"Key cast, no set."
                         },
                         {
                            "enum":[
                               "gallery2"
                            ],
                            "description":"Supporting cast, no set."
                         },
                         {
                            "enum":[
                               "generic"
                            ],
                            "description":"Placeholder iconography or photograph."
                         },
                         {
                            "enum":[
                               "group"
                            ],
                            "description":"Over four cast members."
                         },
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"One key cast member."
                         },
                         {
                            "enum":[
                               "head2"
                            ],
                            "description":"One supporting cast member."
                         },
                         {
                            "enum":[
                               "jersey"
                            ],
                            "description":"Sports jersey."
                         },
                         {
                            "enum":[
                               "key"
                            ],
                            "description":"Key cast or show image."
                         },
                         {
                            "enum":[
                               "league"
                            ],
                            "description":"Sports league logo."
                         },
                         {
                            "enum":[
                               "olympic"
                            ],
                            "description":"Olympic image."
                         },
                         {
                            "enum":[
                               "poster"
                            ],
                            "description":"Poster art."
                         },
                         {
                            "enum":[
                               "prod"
                            ],
                            "description":"Key cast on set."
                         },
                         {
                            "enum":[
                               "prod2"
                            ],
                            "description":"Supporting cast on set."
                         },
                         {
                            "enum":[
                               "program"
                            ],
                            "description":"Key cast from program."
                         },
                         {
                            "enum":[
                               "program2"
                            ],
                            "description":"Supporting cast from program."
                         },
                         {
                            "enum":[
                               "set"
                            ],
                            "description":"DVD box set cover."
                         },
                         {
                            "enum":[
                               "showcard"
                            ],
                            "description":"TV series poster."
                         },
                         {
                            "enum":[
                               "team"
                            ],
                            "description":"Sports team logo."
                         },
                         {
                            "enum":[
                               "team2"
                            ],
                            "description":"Sports team secondary logo."
                         },
                         {
                            "enum":[
                               "trailer"
                            ],
                            "description":"Image for trailer, 16:9."
                         },
                         {
                            "enum":[
                               "video"
                            ],
                            "description":"Video box cover."
                         }
                      ]
                   },
                   "caption":{
                      "type":"string",
                      "description":"Image caption."
                   },
                   "credit":{
                      "type":"string",
                      "description":"Person or company credited with taking the photograph."
                   },
                   "owner":{
                      "type":"string",
                      "description":"Legal owner of the image."
                   },
                   "zoom":{
                      "type":"string",
                      "description":"How much of the subject appears in the picture.",
                      "oneOf":[
                         {
                            "enum":[
                               "head"
                            ],
                            "description":"Head or shoulders to top of head."
                         },
                         {
                            "enum":[
                               "torso"
                            ],
                            "description":"Chest or thigh to top of head."
                         },
                         {
                            "enum":[
                               "body"
                            ],
                            "description":"Body fills at least 80% of frame."
                         },
                         {
                            "enum":[
                               "framed"
                            ],
                            "description":"Full body fills 50% to 80% of frame."
                         },
                         {
                            "enum":[
                               "std"
                            ],
                            "description":"Full body fills 50% of frame or less."
                         }
                      ]
                   },
                   "people":{
                      "type":"integer",
                      "description":"Number of people in the image."
                   },
                   "weight":{
                      "type":"number",
                      "description":"Relative importance of the image based on relevance and prominance of cast members in the image. A higher number means a lower weight (fewer cast members and less prominent cast members). A lower number means a greater weight (more cast members and more prominent cast members). Zero (0) means no cast members in the image."
                   },
                   "ref":{
                      "type":"object",
                      "properties":{
                         "id":{
                            "type":"integer",
                            "description": "ID to use to get information about this resource."
                         },
                         "me":{
                            "type":"string",
                            "description": "URI template to use to get information about this resource."
                         },
                         "parent":{
                            "type":"string",
                            "description": "URI template for information about the parent resource."
                         },
                         "children":{
                            "type":"array",
                            "description": "URI templates for child resources."
                         }
                      },
                      "required":[
                         "id",
                         "me"
                      ]
                   }
                },
                "required":[
                   "id",
                   "zoom",
                   "ref"
                ]
             },
             "ref":{
                "type":"object",
                "properties":{
                   "id":{
                      "type":"integer",
                      "description": "ID to use to get information about this resource."
                   },
                   "me":{
                      "type":"string",
                      "description": "URI template to use to get information about this resource."
                   },
                   "parent":{
                      "type":"string",
                      "description": "URI template for information about the parent resource."
                   },
                   "children":{
                      "type":"array",
                      "description": "URI templates for child resources."
                   }
                },
                "required":[
                   "id",
                   "me"
                ]
             },
             "page":{
                "type":"integer",
                "description":"Page number of the response."
             },
             "size":{
                "type":"integer",
                "description":"Number of elements in this page."
             },
             "total":{
                "type":"integer",
                "description":"Total number of elements available."
             }
          },
          "required":[
             "id",
             "ref"
          ]
       }
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# media_image/master [/media_image/master?id={id}]
The original image file, in the original file format. This image is the highest available resolution of an image.

## GET
This request requires the `media_image` ID for the image, which is returned in responses to the following requests:
+  [data_other](/#reference/other/dataother)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie](/#reference/movie/datamovie)
+  [data_series](/#reference/series/dataseries)
+  [data_season](/#reference/season/dataseason)
+  [data_episode](/#reference/episode/dataepisode)
+  [data_name_images/best](/#reference/image/datanameimagesbest) (in this section)
+  [data_name_images/collection](/#reference/image/datanameimagescollection) (in this section)
+  [data_content_images/best](/#reference/image/datacontentimagesbest) (in this section)
+  [data_content_images/collection](/#reference/image/datacontentimagescollection) (in this section)

+ Parameters
  + id (required, integer, `172343929`)
    The `media_image` ID for the image, returned in responses to the following requests:
      +  [data_other](/#reference/other/dataother)
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie](/#reference/movie/datamovie)
      +  [data_series](/#reference/series/dataseries)
      +  [data_season](/#reference/season/dataseason)
      +  [data_episode](/#reference/episode/dataepisode)
      +  [data_name_images/best](/#reference/image/datanameimagesbest) (in this section)
      +  [data_name_images/collection](/#reference/image/datanameimagescollection) (in this section)
      +  [data_content_images/best](/#reference/image/datacontentimagesbest) (in this section)
      +  [data_content_images/collection](/#reference/image/datacontentimagescollection) (in this section)

+ Response 200 (application/json)

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# media_image/sized [/media_image/sized?id={id}&aspect={aspect}&size={size}&zoom={zoom}]
Best JPG image available for a person, movie, or TV program, as determined by size, shape, and zoom level of your choice.

## GET
This request requires the `media_image` ID for the image, which is returned in responses to the following requests:
+  [data_other](/#reference/other/dataother)
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie](/#reference/movie/datamovie)
+  [data_series](/#reference/series/dataseries)
+  [data_season](/#reference/season/dataseason)
+  [data_episode](/#reference/episode/dataepisode)
+  [data_name_images/best](/#reference/image/datanameimagesbest) (in this section)
+  [data_name_images/collection](/#reference/image/datanameimagescollection) (in this section)
+  [data_content_images/best](/#reference/image/datacontentimagesbest) (in this section)
+  [data_content_images/collection](/#reference/image/datacontentimagescollection) (in this section)

+ Parameters
  + id (required, string, `172343929`)
    The `media_image` ID for the image, returned in responses to the following requests:
      +  [data_other](/#reference/other/dataother)
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie](/#reference/movie/datamovie)
      +  [data_series](/#reference/series/dataseries)
      +  [data_season](/#reference/season/dataseason)
      +  [data_episode](/#reference/episode/dataepisode)
      +  [data_name_images/best](/#reference/image/datanameimagesbest) (in this section)
      +  [data_name_images/collection](/#reference/image/datanameimagescollection) (in this section)
      +  [data_content_images/best](/#reference/image/datacontentimagesbest) (in this section)
      +  [data_content_images/collection](/#reference/image/datacontentimagescollection) (in this section)

  + aspect (required, string, `3x4`)
    Preferred aspect ratio (width:height) of the image: *3x4* or *4x3*.
    <table>
    <tr><th>Value</th><th>Description</th>
    </tr><tr>
    <td>3x4</td>
    <td><p>A common portrait orientation with 4 pixels in height for every 3 pixels in width. This is the orientation of the iPad and Kindle.</p></td>
    </tr><tr>
    <td>4x3</td>
    <td><p>A common landscape orientation with 3 pixels in height for every 4 pixels in width. This is the orientation of standard definition television.</p></td>
    </tr>
    </table>

  + size (required, string, `large`)
    Preferred height of the image: *small*, *medium*, or *large*. The following table shows the image dimensions for each in both 3:4 and 4:3 aspect ratios.
    <table><tr>
    <th>Size</th>
    <th>Height</th>
    <th>3:4 Width</th>
    <th>4:3 Width</th>
    </tr><tr>
    <td>small</td>
    <td><p>144 pixels</p></td>
    <td><p>108 pixels</p></td>
    <td><p>192 pixels</p></td>
    </tr><tr>
    <td>medium</td>
    <td><p>324 pixels</p></td>
    <td><p>243 pixels</p></td>
    <td><p>432 pixels</p></td>
    </tr><tr>
    <td>large</td>
    <td><p>504 pixels</p></td>
    <td><p>378 pixels</p></td>
    <td><p>672 pixels</p></td>
    </tr></table>

  + zoom (required, string, `std`)
    Preferred zoom level, or closeup level, of the image. Use a value from the following table, listed from closest to most distant. If an image with the preferred zoom level is unavailable, a more distant zoom level is returned.
    <table>
    <tr><th>Value</th><th>Description</th>
    </tr><tr>
    <td>head</td>
    <td><p>Head, or head and shoulders, fills image height.</p></td>
    </tr><tr>
    <td>torso</td>
    <td><p>Upper body fills image height.</p></td>
    </tr><tr>
    <td>body</td>
    <td><p>Body fills at least 80% of the image height.</p></td>
    </tr><tr>
    <td>framed</td>
    <td><p>Full body fills 50% to 80% of the image height.</p></td>
    </tr><tr>
    <td>std</td>
    <td><p>Standard. Full body fills up to 50% of the image height.</p></td>
    </tr>
    </table>

+ Response 200 (application/json)

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# Group Movie
This section documents the calls that return data about a movie.

*Design Note:* The `data_movie` ID for a movie identifies the movie in all of the following API calls.
- [data_movie](/#reference/movie/datamovie)
- [data_delta_movie](/#reference/movie/datadeltamovie)
- [data_movie_aired](/#reference/movie/datamovieaired)
- [data_movie_credits/cast](/#reference/movie/datamoviecreditscast)
- [data_movie_credits/crew](/#reference/movie/datamoviecreditscrew)
- [data_movie_credits/credits](/#reference/movie/datamoviecreditscredits)
- [data_movie_ratings](/#reference/movie/datamovieratings)
- [data_movie_related](/#reference/movie/datamovierelated)
- [data_movie_releases](/#reference/movie/datamoviereleases)
- [data_movie_review](/#reference/movie/datamoviereview)
- [data_movie_synopses/collection](/#reference/movie/datamoviesynopsescollection)
- [data_movie_synopses/best](/#reference/movie/datamoviesynopsesbest)
- [data_movie_synopsis](/#reference/movie/datamoviesynopsis)
- [data_movie_theatricals](/#reference/movie/datamovietheatricals)
- [data_movie_awards](/#reference/awards/datamovieawards) (in the Awards section)
- [data_content_images/best](/#reference/image/datacontentimagesbest) (in the Image section)
- [data_content_images/collection](/#reference/image/datacontentimagescollection) (in the Image section)
- [data_movie_appearances](/#reference/tv-schedule/datamovieappearances) (in the TV Schedule section)

# data_movie [/data_movie?id={id}&in={in}&in2={in2}&in3={in3}]
Returns information about a movie, including editorial content, related social media resources, and Rotten Tomatoes score.

## GET
This request requires the `data_movie` ID for the movie, which is returned in responses to the following requests:
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
+  [discover_all_similar_video/movie](/#reference/recommendations/discoverallsimilarvideomovie)
+  [discover_all_video_by_genre/movie](/#reference/search/discoverallvideobygenremovie)
+  [discover_all_video_by_search/movie](/#reference/search/discoverallvideobysearchmovie)
+  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
+  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
+  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie` ID for the movie, returned in responses to the following requests:
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
      +  [discover_all_similar_video/movie](/#reference/recommendations/discoverallsimilarvideomovie)
      +  [discover_all_video_by_genre/movie](/#reference/search/discoverallvideobygenremovie)
      +  [discover_all_video_by_search/movie](/#reference/search/discoverallvideobysearchmovie)
      +  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
      +  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
      +  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie",
       "description":"Information about a movie.",
       "properties":{
          "market":{
             "type":"array",
             "description":"Regions for which this data is relevant. 'AL' applies to all countries we cover except for AU, BR, CN, HK, IN, MY, PH, RU, SG, TR, and TW.",
             "items":{
                "type":"string"
             }
          },
          "in":{
             "type":"string",
             "description":"Language of response data."
          },
          "title":{
             "type":"string",
             "description":"Title of the show."
          },
          "alts":{
             "type":"object",
             "description":"Alternate titles of the show.",
             "properties":{
                "short15":{
                   "type":"string",
                   "description":"Title with up to 15 characters for a grid cell. Creative abbreviations used as needed."
                },
                "short30":{
                   "type":"string",
                   "description":"Title with up to 30 characters. Creative abbreviations used as needed."
                },
                "short8":{
                   "type":"string",
                   "description":"Title with up to 8 characters for a grid cell. Creative abbreviations used as needed."
                },
                "short50":{
                   "type":"string",
                   "description":"Title with up to 50 characters. Creative abbreviations used as needed."
                },
                "alias":{
                   "type":"string",
                   "description":"Alternate title by which a show has been distributed."
                },
                "alias2":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "alias3":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "alias4":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "subtitle":{
                   "type":"string",
                   "description":"Subtitle of the show."
                }
             }
          },
          "image":{
             "type":"object",
             "description":"Information about the primary image associated with the show.",
             "properties":{
                "zoom":{
                   "type":"string",
                   "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                   "oneOf":[
                      {
                         "enum":[
                            "head"
                         ],
                         "description":"Head or shoulders to top of head."
                      },
                      {
                         "enum":[
                            "torso"
                         ],
                         "description":"Chest or thigh to top of head."
                      },
                      {
                         "enum":[
                            "body"
                         ],
                         "description":"Body fills at least 80% of frame."
                      },
                      {
                         "enum":[
                            "framed"
                         ],
                         "description":"Full body fills 50% to 80% of frame."
                      },
                      {
                         "enum":[
                            "std"
                         ],
                         "description":"Full body fills 50% of frame or less."
                      }
                   ]
                },
                "type":{
                   "type":"string",
                   "description":"Type of image.",
                   "oneOf":[
                      {
                         "enum":[
                            "album"
                         ],
                         "description":"Album cover front."
                      },
                      {
                         "enum":[
                            "album2"
                         ],
                         "description":"Album cover back."
                      },
                      {
                         "enum":[
                            "athlete"
                         ],
                         "description":"Athlete image."
                      },
                      {
                         "enum":[
                            "box"
                         ],
                         "description":"VHS box cover."
                      },
                      {
                         "enum":[
                            "celebrity"
                         ],
                         "description":"Celebrity."
                      },
                      {
                         "enum":[
                            "dvd"
                         ],
                         "description":"DVD box cover."
                      },
                      {
                         "enum":[
                            "gallery"
                         ],
                         "description":"Key cast, no set."
                      },
                      {
                         "enum":[
                            "gallery2"
                         ],
                         "description":"Supporting cast, no set."
                      },
                      {
                         "enum":[
                            "generic"
                         ],
                         "description":"Placeholder iconography or photograph."
                      },
                      {
                         "enum":[
                            "group"
                         ],
                         "description":"Over four cast members."
                      },
                      {
                         "enum":[
                            "head"
                         ],
                         "description":"One key cast member."
                      },
                      {
                         "enum":[
                            "head2"
                         ],
                         "description":"One supporting cast member."
                      },
                      {
                         "enum":[
                            "jersey"
                         ],
                         "description":"Sports jersey."
                      },
                      {
                         "enum":[
                            "key"
                         ],
                         "description":"Key cast or show image."
                      },
                      {
                         "enum":[
                            "league"
                         ],
                         "description":"Sports league logo."
                      },
                      {
                         "enum":[
                            "olympic"
                         ],
                         "description":"Olympic image."
                      },
                      {
                         "enum":[
                            "poster"
                         ],
                         "description":"Poster art."
                      },
                      {
                         "enum":[
                            "prod"
                         ],
                         "description":"Key cast on set."
                      },
                      {
                         "enum":[
                            "prod2"
                         ],
                         "description":"Supporting cast on set."
                      },
                      {
                         "enum":[
                            "program"
                         ],
                         "description":"Key cast from program."
                      },
                      {
                         "enum":[
                            "program2"
                         ],
                         "description":"Supporting cast from program."
                      },
                      {
                         "enum":[
                            "set"
                         ],
                         "description":"DVD box set cover."
                      },
                      {
                         "enum":[
                            "showcard"
                         ],
                         "description":"TV series poster."
                      },
                      {
                         "enum":[
                            "team"
                         ],
                         "description":"Sports team logo."
                      },
                      {
                         "enum":[
                            "team2"
                         ],
                         "description":"Sports team secondary logo."
                      },
                      {
                         "enum":[
                            "trailer"
                         ],
                         "description":"Image for trailer, 16:9."
                      },
                      {
                         "enum":[
                            "video"
                         ],
                         "description":"Video box cover."
                      }
                   ]
                },
                "ref":{
                   "type":"object",
                   "properties":{
                      "id":{
                         "type":"integer",
                         "description":"ID to use to get information about this resource."
                      },
                      "me":{
                         "type":"string",
                         "description":"URI template to use to get information about this resource."
                      },
                      "parent":{
                         "type":"string",
                         "description":"URI template for information about the parent resource."
                      },
                      "children":{
                         "type":"array",
                         "description":"URI templates for child resources."
                      }
                   },
                   "required":[
                      "id",
                      "me"
                   ]
                }
             },
             "required":[
                "ref"
             ]
          },
          "year":{
             "type":"integer",
             "description":"Year the movie was first released. Element is omitted if the year is unknown."
          },
          "runtime":{
             "type":"integer",
             "description":"Duration of the movie in seconds. Element is omitted if the duration is unknown."
          },
          "spoken":{
             "type":"array",
             "description":"Languages spoken in the original release.",
             "items":{
                "type":"string"
             }
          },
          "countries":{
             "type":"array",
             "description":"Countries in which the movie was produced.",
             "items":{
                "type":"string"
             }
          },
          "locations":{
             "type":"array",
             "description":"Locations where the movie was filmed.",
             "items":{
                "type":"string"
             }
          },
          "category":{
             "type":"string",
             "description":"Program category: News, Movie, Music, Sports, Lifestyle, Children's, Other."
          },
          "genres":{
             "type":"array",
             "description":"Genres the movie fits in.",
             "items":{
                "type":"string"
             }
          },
          "subGenres":{
             "type":"array",
             "description":"Subgenres the movie fits in.",
             "items":{
                "type":"string"
             }
          },
          "moods":{
             "type":"array",
             "description":"Terms that describe expressive characteristics of the movie.",
             "items":{
                "type":"string"
             }
          },
          "tones":{
             "type":"array",
             "description":"Feelings and attitudes that motivate or fit with the movie.",
             "items":{
                "type":"string"
             }
          },
          "themes":{
             "type":"array",
             "description":"Topics and circumstances that motivate or fit with the movie.",
             "items":{
                "type":"string"
             }
          },
          "keywords":{
             "type":"array",
             "description":"Keywords that describe characteristics of the movie.",
             "items":{
                "type":"string"
             }
          },
          "aesthetics":{
             "type":"array",
             "description":"Artistic styles that apply to the movie, distinct techniques filmmakers employ for a specific effect.",
             "items":{
                "type":"string"
             }
          },
          "audiences":{
             "type":"array",
             "description":"Audience types that the movie is intended to appeal to.",
             "items":{
                "type":"string"
             }
          },
          "periods":{
             "type":"array",
             "description":"Time periods when the movie story takes place.",
             "items":{
                "type":"string"
             }
          },
          "characters":{
             "type":"array",
             "description":"Character types that appear in the movie.",
             "items":{
                "type":"string"
             }
          },
          "importance":{
             "type":"array",
             "description":"Rating phrases that apply to the movie review.",
             "items":{
                "type":"string"
             }
          },
          "flags":{
             "type":"array",
             "description":"Theme phrases that apply to the video review.",
             "items":{
                "type":"string"
             }
          },
          "rottenTomatoes":{
             "type":"object",
             "description":"Rotten Tomatoes ratings associated with the program.",
             "properties":{
                "critic":{
                   "type":"object",
                   "properties":{
                      "score":{
                         "type":"integer",
                         "description":"Percentage of positive reviews by professional critics."
                      },
                      "count":{
                         "type":"integer",
                         "description":"Number of reviews by professional critics."
                      },
                      "freshness":{
                         "type":"string",
                         "description":"Rotten Tomatoes rating for the show.",
                         "oneOf":[
                            {
                               "enum":[
                                  "rotten"
                               ],
                               "description":"A Rotten Tomatoes score of less than 59% positive reviews."
                            },
                            {
                               "enum":[
                                  "fresh"
                               ],
                               "description":"A Rotten Tomatoes score of 60% positive reviews or higher."
                            },
                            {
                               "enum":[
                                  "certified"
                               ],
                               "description":"A Rotten Tomatoes score of steady 75% positive reviews or higher after a set number of reviews."
                            }
                         ]
                      },
                      "uri":{
                         "type":"string",
                         "description":"Link to the Rotten Tomatoes web page."
                      }
                   },
                   "required":[
                      "count",
                      "uri"
                   ]
                },
                "fan":{
                   "type":"object",
                   "properties":{
                      "score":{
                         "type":"integer",
                         "description":"Percentage of positive reviews by fans."
                      },
                      "count":{
                         "type":"integer",
                         "description":"Number of reviews by fans."
                      },
                      "uri":{
                         "type":"string",
                         "description":"Link to the Rotten Tomatoes web page."
                      },
                      "isPrerelease":{
                         "type":"boolean",
                         "description":"True if the show has not been released, so reviews are based on fans who want to see the show. Element is omitted otherwise."
                      }
                   },
                   "required":[
                      "count",
                      "uri"
                   ]
                }
             }
          },
          "facebooks":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Facebook accounts associated with the movie.",
                   "properties":{
                      "facebookId":{
                         "type":"integer",
                         "description":"Facebook ID."
                      },
                      "type":{
                         "type":"string",
                         "description":"Facebook page type: official or additional.",
                         "oneOf":[
                            {
                               "enum":[
                                  "official"
                               ]
                            },
                            {
                               "enum":[
                                  "additional"
                               ]
                            }
                         ]
                      },
                      "uri":{
                         "type":"string",
                         "description":"Facebook page URL."
                      }
                   },
                   "required":[
                      "facebookId",
                      "type",
                      "uri"
                   ]
                }
             ]
          },
          "twitters":{
             "type":"array",
             "description":"Twitter accounts associated with the movie.",
             "items":{
                "type":"string"
             }
          },
          "synonyms":{
             "type":"array",
             "description":"Legacy IDs for the show.",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "program":{
                         "type":"integer",
                         "description":"Cosmo ID."
                      },
                      "iguide":{
                         "type":"integer",
                         "description":"iGuide ID."
                      },
                      "amg":{
                         "type":"string",
                         "description":"AMG ID."
                      },
                      "eidr":{
                         "type":"string",
                         "description":"EIDR ID."
                      },
                      "in":{
                         "type":"string",
                         "description":"Language of the show."
                      },
                      "title":{
                         "type":"string",
                         "description":"Title of the show."
                      }
                   },
                   "required":[
                      "in",
                      "title"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          }
       },
       "required":[
          "in",
          "title",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_delta_movie [/data_delta_movie?day={day}&next={next}]
Returns IDs and Etags for [data_movie](/#reference/movie/datamovie) response data that changed during a single UTC date one to four days ago.

Use this request as a first step toward updating your cached [data_movie](/#reference/movie/datamovie) response data.

## GET
If more than 100 results are available, the response includes a __next__ field to identify the starting point of the next page of results.

+ Parameters
  + day (required, string matching \d{4}-\d{2}-\d{2}, `2015-08-23`)
    A UTC date, specified in YYYY-MM-DD format, that is one to four days before the current UTC date.
  + next (optional, integer)
    The starting point for the next page of results, returned in the __next__ field in a response to this request if another page of results is available.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"data_delta_movie",
       "description":"List of data_movie response data that changed during a specified UTC date.",
       "properties":{
          "date":{
             "type":"string",
             "description":"UTC date requested."
          },
          "ref":{
             "type":"object",
             "properties":{
                "next":{
                   "type":"string",
                   "description":"Value to use in the 'next' parameter to return the next page of results."
                },
                "date":{
                   "type":"string",
                   "description":"UTC date this response applies to."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                }
             },
             "required":[
                "date",
                "me"
             ]
          },
          "type":{
             "type":"string",
             "description":"Type of changed data."
          },
          "size":{
             "type":"integer",
             "description":"Number of items returned in this response."
          },
          "deltas":{
             "type":"array",
             "description":"Information about changes during the requested date.",
             "items":[
                {
                   "type":"object",
                   "description":"Information about changed data.",
                   "properties":{
                      "id":{
                         "type":"integer",
                         "description":"Rovi ID for data that changed."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description":"ID to use to get the changed data."
                            },
                            "me":{
                               "type":"string",
                               "description":"URI template name to use to get the changed data."
                            }
                         }
                      },
                      "etag":{
                         "type":"string",
                         "description":"ETag for the changed data."
                      }
                   }
                }
             ]
          }
       },
       "required":[
          "ref",
          "etag"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_aired [/data_movie_aired?id={id}&country={country}&page={page}]
Returns the original television broadcast date of a movie in a country.

## GET
Available codes for the **country** parameter are:

| Code | Country                 | Code | Country                          |
| ---- | ----------------------- | ---- | -------------------------------- |
| AD   | Andorra                 | IN   | India                            |
| AI   | Anguilla                | IE   | Ireland                          |
| AG   | Antigua & Barbuda&emsp; | IT   | Italy                            |
| AR   | Argentina               | JM   | Jamaica                          |
| AW   | Aruba                   | LI   | Lichtenstein                     |
| AU   | Australia&emsp;         | LU   | Luxembourg                       |
| AT   | Austria                 | MY   | Malaysia                         |
| BS   | Bahamas                 | MT   | Malta                            |
| BB   | Barbados                | MX   | Mexico                           |
| BE   | Belgium                 | MC   | Monaco                           |
| BM   | Bermuda                 | MS   | Montserrat                       |
| BO   | Bolivia                 | NL   | Netherlands                      |
| BR   | Brazil                  | NI   | Nicaragua                        |
| VG   | British Virgin Islands&emsp; | NO   | Norway                      |
| CA   | Canada                  | PA   | Panama                           |
| CL   | Chile                   | PE   | Peru                             |
| CN   | China                   | PH   | Philippines                      |
| CO   | Colombia                | PL   | Poland                           |
| CR   | Costa Rica              | PT   | Portugal                         |
| CW   | Curacao                 | RU   | Russia                           |
| DK   | Denmark                 | KN   | Saint Kitts & Nevis              |
| DO   | Dominican Republic&emsp; | LC   | Saint Lucia                     |
| EC   | Ecuador                 | MF   | Saint Martin                     |
| SV   | El Salvador&emsp;       | VC   | Saint Vincent and the Grenadines |
| FO   | Faroe Islands&emsp;     | SG   | Singapore                        |
| FI   | Finland                 | ES   | Spain                            |
| FR   | France                  | SE   | Sweden                           |
| DE   | Germany                 | CH   | Switzerland                      |
| GI   | Gibraltar               | TW   | Taiwan                           |
| GD   | Grenada                 | TT   | Trinidad & Tobago                |
| GT   | Guatemala               | TR   | Turkey                           |
| GY   | Guyana                  | TC   | Turks & Caicos                   |
| HN   | Honduras                | GB   | United Kingdom*                  |
| HK   | Hong Kong               | US   | United States                    |
| IS   | Iceland                 | VE   | Venezuela                        |
\* Includes Wales, Scotland, and Northern Ireland.

+ Parameters
  + id (required, integer, `904412159`)
    The `data_movie_aired` ID for the movie, returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_aired` ID is the same as the `data_movie` ID for the movie.
  + country (optional, string, `US`)
    Country, stated as one of the uppercase, ISO 3166-1, country codes in the table in the middle panel. If not specified, original broadcast dates for all countries are returned.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_aired",
       "properties":{
          "aired":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "country":{
                         "type":"string",
                         "description":"Country."
                      },
                      "date":{
                         "type":"string",
                         "description":"Date the show was first broadcast in the country."
                      }
                   },
                   "required":[
                      "country",
                      "date"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "aired",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_credits/cast [/data_movie_credits/cast?id={id}&in={in}&in2={in2}&in3={in3}&page={page}&by={by}]
Returns cast credits for a movie.

## GET
This request requires the `data_movie_credits` ID for the movie, which is returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_credits` ID for the movie, returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `role`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __role__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-role__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __person.image=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __role=Tony Stark__. To end with items that contain a particular value, precede the value with an exclamation like this: __role=!Tony Stark__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_credits",
       "description":"Credits for a movie.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the movie.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language of localized data in this response."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_credits/crew [/data_movie_credits/crew?id={id}&in={in}&in2={in2}&in3={in3}&page={page}&by={by}]
Returns crew credits for a movie.

## GET
This request requires the `data_movie_credits` ID for the movie, which is returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_credits` ID for the movie, returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `type`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __type=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_credits",
       "description":"Credits for a movie.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the movie.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language of localized data in this response."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_credits/credits [/data_movie_credits/credits?id={id}&in={in}&in2={in2}&in3={in3}&page={page}&by={by}]
Returns both cast and crew credits for movie.

## GET
This request requires the `data_movie_credits` ID for the movie, which is returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_credits` ID for the movie, returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_credits` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `credit`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify field-equals-null, like this: __role=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.
      +  Combine alpha and numeric sorts in a comma-separated list in left-to-right priority.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_credits",
       "description":"Credits for a movie.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the movie.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language of localized data in this response."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_ratings [/data_movie_ratings?id={id}&country={country}]
Returns parental ratings for a movie.

## GET
This request requires the `data_movie_ratings` ID for the movie, which is returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_ratings` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_ratings` ID for the movie, returned in responses to the [data_movie](/#reference/movie/datamovie) request. A `data_movie_ratings` ID is the same as the `data_movie` ID for the movie.
  + country (required, string, `US`)
    Country you want parental ratings for, specified as one of the following ISO 3166-1 alpha-2 codes:
    <table><tr>
    <th>Code</th><th>Country</th><th>Code</th><th>Country</th>
    </tr><tr>
    <td>AR</td><td><p>Argentina</p></td><td>MX</td><td><p>Mexico</p></td>
    </tr><tr>
    <td>AT</td><td><p>Austria</p></td><td>NL</td><td><p>Netherlands</p></td>
    </tr><tr>
    <td>BE</td><td><p>Belgium</p></td><td>NO</td><td><p>Norway</p></td>
    </tr><tr>
    <td>BR</td><td><p>Brazil</p></td><td>PE</td><td><p>Peru</p></td>
    </tr><tr>
    <td>CA</td><td><p>Canada</p></td><td>PL</td><td><p>Poland</p></td>
    </tr><tr>
    <td>CL</td><td><p>Chile</p></td><td>PT</td><td><p>Portugal</p></td>
    </tr><tr>
    <td>CO</td><td><p>Colombia</p></td><td>ES</td><td><p>Spain</p></td>
    </tr><tr>
    <td>DK</td><td><p>Denmark</p></td><td>SE</td><td><p>Sweden</p></td>
    </tr><tr>
    <td>FI</td><td><p>Finland</p></td><td>CH</td><td><p>Switzerland</p></td>
    </tr><tr>
    <td>FR</td><td><p>France</p></td><td>TC</td><td><p>Turks & Caicos</p></td>
    </tr><tr>
    <td>DE</td><td><p>Germany</p></td><td>GB</td><td><p>United Kingdom*</p></td>
    </tr><tr>
    <td>IE</td><td><p>Ireland</p></td><td>US</td><td><p>United States</p></td>
    </tr><tr>
    <td>IT</td><td><p>Italy</p></td><td>VE</td><td><p>Venezuela</p></td>
    </tr></table><br/>*Includes Wales, Scotland, and Northern Ireland.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_ratings",
       "description":"Parental ratings for a movie.",
       "properties":{
          "ratings":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Parental rating for the movie.",
                   "properties":{
                      "in":{
                         "type":"string"
                      },
                      "type":{
                         "type":"string",
                         "description":"Source of the parental rating."
                      },
                      "rating":{
                         "type":"string",
                         "description":"The parental rating."
                      },
                      "medium":{
                         "type":"string",
                         "description":"Media that this rating applies to.",
                         "oneOf":[
                            {
                               "enum":[
                                  "movie"
                               ],
                               "description":"Theatrical film."
                            },
                            {
                               "enum":[
                                  "tv"
                               ],
                               "description":"Television."
                            },
                            {
                               "enum":[
                                  "stars"
                               ],
                               "description":"TV series qualitative rating from 1 to 4 stars. Rated by Rovi."
                            },
                            {
                               "enum":[
                                  "age"
                               ],
                               "description":"TV series youngest appropriate age rating. Rated by Rovi."
                            },
                            {
                               "enum":[
                                  "family"
                               ],
                               "description":"TV series family friendly rating on a scale of 0 to 10."
                            }
                         ]
                      },
                      "countries":{
                         "type":"array",
                         "description":"Countries the parental rating applies to.",
                         "items":{
                            "type":"string"
                         }
                      },
                      "reasons":{
                         "type":"array",
                         "description":"Reasons for the rating.",
                         "items":{
                            "type":"string"
                         }
                      },
                      "subrating":{
                         "type":"string",
                         "description":"Content warning labels that apply to the program."
                      }
                   },
                   "required":[
                      "in",
                      "type",
                      "rating"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_related [/data_movie_related?id={id}&relation={relation}&in={in}&in2={in2}&in3={in3}&page={page}]
Returns titles of related programs and movies:
+ series in
+ similar to
+ related to
+ spoofed or spoofed by
+ remake of or remade as
+ features or featured in
+ re-edit of or re-edited by
+ spin-off of or spun-off as
+ preceeded by or preceeded
+ influenced by or influenced

## GET
This request requires the `data_movie_related` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_related` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `915165185`)
    The `data_movie_related` ID for the movie, returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_related` ID is the same as the `data_movie` ID for the movie.
  + relation (optional, string, `similar`)
    The relationship, specified as one of the following. Leave this value empty to return titles for all relationships.
      +  featured
      +  influenced
      +  predecessor
      +  re-edit
      +  related
      +  remake
      +  similar
      +  series
      +  spin-off
      +  spoof

  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_related",
       "description":"Returns titles of related programs and movies.",
       "properties":{
          "related":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "relation":{
                         "type":"string",
                         "description":"Type of relation.",
                         "oneOf":[
                            {
                               "enum":[
                                  "featured"
                               ],
                               "description":"Features or featured in."
                            },
                            {
                               "enum":[
                                  "influenced"
                               ],
                               "description":"Influenced by or influenced."
                            },
                            {
                               "enum":[
                                  "related"
                               ],
                               "description":"Related to."
                            },
                            {
                               "enum":[
                                  "predecessor"
                               ],
                               "description":"Preceeded by or preceeded."
                            },
                            {
                               "enum":[
                                  "re-edit"
                               ],
                               "description":"Re-edit of or re-edited by."
                            },
                            {
                               "enum":[
                                  "remake"
                               ],
                               "description":"Remake of or remade as."
                            },
                            {
                               "enum":[
                                  "similar"
                               ],
                               "description":"Similar to."
                            },
                            {
                               "enum":[
                                  "series"
                               ],
                               "description":"Series in."
                            },
                            {
                               "enum":[
                                  "spin-off"
                               ],
                               "description":"Spin-off of or spun-off as."
                            },
                            {
                               "enum":[
                                  "spoof"
                               ],
                               "description":"Spoofed or spoofed by."
                            }
                         ]
                      },
                      "content":{
                         "type":"object",
                         "properties":{
                            "type":{
                               "type":"string",
                               "description":"Type of show.",
                               "oneOf":[
                                  {
                                     "enum":[
                                        "movie"
                                     ],
                                     "description":"Movie."
                                  },
                                  {
                                     "enum":[
                                        "season"
                                     ],
                                     "description":"Season in a TV series."
                                  },
                                  {
                                     "enum":[
                                        "episode"
                                     ],
                                     "description":"Episode in a TV series."
                                  },
                                  {
                                     "enum":[
                                        "series"
                                     ],
                                     "description":"TV series."
                                  },
                                  {
                                     "enum":[
                                        "other"
                                     ],
                                     "description":"A program other than a movie or TV series."
                                  }
                               ]
                            },
                            "in":{
                               "type":"string",
                               "description":"Language of the show."
                            },
                            "market":{
                               "type":"array",
                               "items":{
                                  "type":"string"
                               }
                            },
                            "title":{
                               "type":"string",
                               "description":"Title of the show."
                            },
                            "image":{
                               "type":"object",
                               "description":"Information about the primary image associated with the show.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "ref"
                               ]
                            },
                            "year":{
                               "type":"integer",
                               "description":"Year the show was released."
                            },
                            "synonyms":{
                               "type":"array",
                               "description":"Legacy IDs for the show.",
                               "items":[
                                  {
                                     "type":"object",
                                     "description":"Other IDs that have been assigned to the show.",
                                     "properties":{
                                        "program":{
                                           "type":"integer",
                                           "description":"Cosmo ID."
                                        },
                                        "iguide":{
                                           "type":"integer",
                                           "description":"iGuide ID."
                                        },
                                        "amg":{
                                           "type":"string",
                                           "description":"AMG ID."
                                        },
                                        "eidr":{
                                           "type":"string",
                                           "description":"EIDR ID."
                                        },
                                        "in":{
                                           "type":"string",
                                           "description":"Language of the show."
                                        },
                                        "title":{
                                           "type":"string",
                                           "description":"Title of the show."
                                        }
                                     },
                                     "required":[
                                        "in",
                                        "title"
                                     ]
                                  }
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "type",
                            "in",
                            "title",
                            "ref"
                         ]
                      }
                   },
                   "required":[
                      "relation",
                      "content"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_releases [/data_movie_releases?id={id}&in={in}&in2={in2}&in3={in3}&page={page}]
Returns information about releases of a movie. Releases differ in language, content, or title.

## GET
This request requires the `data_movie_releases` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_releases` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_releases` ID for the movie, returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_releases` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_releases",
       "properties":{
          "releases":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language of localized data in this response."
                      },
                      "market":{
                         "type":"array",
                         "description":"Regions for which this data is relevant. 'AL' applies to all countries we cover except for AU, BR, CN, HK, IN, MY, PH, RU, SG, TR, and TW.",
                         "items":{
                            "type":"string"
                         }
                      },
                      "title":{
                         "type":"string",
                         "description":"Title of the show."
                      },
                      "alts":{
                         "type":"object",
                         "description":"Alternate titles for the season.",
                         "properties":{
                            "short15":{
                               "type":"string",
                               "description":"Title with up to 15 characters for a grid cell. Creative abbreviations used as needed."
                            },
                            "short30":{
                               "type":"string",
                               "description":"Title with up to 30 characters. Creative abbreviations used as needed."
                            },
                            "short8":{
                               "type":"string",
                               "description":"Title with up to 8 characters for a grid cell. Creative abbreviations used as needed."
                            },
                            "short50":{
                               "type":"string",
                               "description":"Title with up to 50 characters. Creative abbreviations used as needed."
                            },
                            "alias":{
                               "type":"string",
                               "description":"Alternate title by which a show has been distributed."
                            },
                            "alias2":{
                               "type":"string",
                               "description":"Another alternate title by which a show has been distributed."
                            },
                            "alias3":{
                               "type":"string",
                               "description":"Another alternate title by which a show has been distributed."
                            },
                            "alias4":{
                               "type":"string",
                               "description":"Another alternate title by which a show has been distributed."
                            },
                            "subtitle":{
                               "type":"string",
                               "description":"Subtitle of the show."
                            }
                         }
                      },
                      "image":{
                         "type":"object",
                         "description":"Information about the primary image associated with the show.",
                         "properties":{
                            "zoom":{
                               "type":"string",
                               "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                               "oneOf":[
                                  {
                                     "enum":[
                                        "head"
                                     ],
                                     "description":"Head or shoulders to top of head."
                                  },
                                  {
                                     "enum":[
                                        "torso"
                                     ],
                                     "description":"Chest or thigh to top of head."
                                  },
                                  {
                                     "enum":[
                                        "body"
                                     ],
                                     "description":"Body fills at least 80% of frame."
                                  },
                                  {
                                     "enum":[
                                        "framed"
                                     ],
                                     "description":"Full body fills 50% to 80% of frame."
                                  },
                                  {
                                     "enum":[
                                        "std"
                                     ],
                                     "description":"Full body fills 50% of frame or less."
                                  }
                               ]
                            },
                            "type":{
                               "type":"string",
                               "description":"Type of image.",
                               "oneOf":[
                                  {
                                     "enum":[
                                        "album"
                                     ],
                                     "description":"Album cover front."
                                  },
                                  {
                                     "enum":[
                                        "album2"
                                     ],
                                     "description":"Album cover back."
                                  },
                                  {
                                     "enum":[
                                        "athlete"
                                     ],
                                     "description":"Athlete image."
                                  },
                                  {
                                     "enum":[
                                        "box"
                                     ],
                                     "description":"VHS box cover."
                                  },
                                  {
                                     "enum":[
                                        "celebrity"
                                     ],
                                     "description":"Celebrity."
                                  },
                                  {
                                     "enum":[
                                        "dvd"
                                     ],
                                     "description":"DVD box cover."
                                  },
                                  {
                                     "enum":[
                                        "gallery"
                                     ],
                                     "description":"Key cast, no set."
                                  },
                                  {
                                     "enum":[
                                        "gallery2"
                                     ],
                                     "description":"Supporting cast, no set."
                                  },
                                  {
                                     "enum":[
                                        "generic"
                                     ],
                                     "description":"Placeholder iconography or photograph."
                                  },
                                  {
                                     "enum":[
                                        "group"
                                     ],
                                     "description":"Over four cast members."
                                  },
                                  {
                                     "enum":[
                                        "head"
                                     ],
                                     "description":"One key cast member."
                                  },
                                  {
                                     "enum":[
                                        "head2"
                                     ],
                                     "description":"One supporting cast member."
                                  },
                                  {
                                     "enum":[
                                        "jersey"
                                     ],
                                     "description":"Sports jersey."
                                  },
                                  {
                                     "enum":[
                                        "key"
                                     ],
                                     "description":"Key cast or show image."
                                  },
                                  {
                                     "enum":[
                                        "league"
                                     ],
                                     "description":"Sports league logo."
                                  },
                                  {
                                     "enum":[
                                        "olympic"
                                     ],
                                     "description":"Olympic image."
                                  },
                                  {
                                     "enum":[
                                        "poster"
                                     ],
                                     "description":"Poster art."
                                  },
                                  {
                                     "enum":[
                                        "prod"
                                     ],
                                     "description":"Key cast on set."
                                  },
                                  {
                                     "enum":[
                                        "prod2"
                                     ],
                                     "description":"Supporting cast on set."
                                  },
                                  {
                                     "enum":[
                                        "program"
                                     ],
                                     "description":"Key cast from program."
                                  },
                                  {
                                     "enum":[
                                        "program2"
                                     ],
                                     "description":"Supporting cast from program."
                                  },
                                  {
                                     "enum":[
                                        "set"
                                     ],
                                     "description":"DVD box set cover."
                                  },
                                  {
                                     "enum":[
                                        "showcard"
                                     ],
                                     "description":"TV series poster."
                                  },
                                  {
                                     "enum":[
                                        "team"
                                     ],
                                     "description":"Sports team logo."
                                  },
                                  {
                                     "enum":[
                                        "team2"
                                     ],
                                     "description":"Sports team secondary logo."
                                  },
                                  {
                                     "enum":[
                                        "trailer"
                                     ],
                                     "description":"Image for trailer, 16:9."
                                  },
                                  {
                                     "enum":[
                                        "video"
                                     ],
                                     "description":"Video box cover."
                                  }
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "ref"
                         ]
                      },
                      "variations":{
                         "type":"array",
                         "items":{
                            "type":"string"
                         }
                      },
                      "year":{
                         "type":"integer",
                         "description":"Year the show was released."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description":"ID to use to get information about this resource."
                            },
                            "me":{
                               "type":"string",
                               "description":"URI template to use to get information about this resource."
                            },
                            "parent":{
                               "type":"string",
                               "description":"URI template for information about the parent resource."
                            },
                            "children":{
                               "type":"array",
                               "description":"URI templates for child resources."
                            }
                         },
                         "required":[
                            "id",
                            "me"
                         ]
                      }
                   },
                   "required":[
                      "in",
                      "title",
                      "ref"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "releases",
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_review [/data_movie_review?id={id}&in={in}&in2={in2}&in3={in3}]
Returns a professional review of a movie.

## GET
This request requires the `data_movie_review` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_review` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `905191267`)
    The `data_movie_review` ID for the movie, returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_review` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_review",
       "description":"A professional review of a movie.",
       "properties":{
          "review":{
             "type":"object",
             "description":"The review and information about the review.",
             "properties":{
                "in":{
                   "type":"string",
                   "description":"Language of the review."
                },
                "text":{
                   "type":"string",
                   "description":"The review."
                },
                "authors":{
                   "type":"array",
                   "items":[
                      {
                         "type":"object",
                         "description":"Authors of the review.",
                         "properties":{
                            "first":{
                               "type":"string",
                               "description":"First name of an author of the review."
                            },
                            "last":{
                               "type":"string",
                               "description":"Last name of an author of the review."
                            }
                         },
                         "required":[
                            "first",
                            "last"
                         ]
                      }
                   ]
                }
             },
             "required":[
                "in",
                "text",
                "authors"
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          }
       },
       "required":[
          "review",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_synopses/collection [/data_movie_synopses/collection?id={id}&in={in}&in2={in2}&in3={in3}]
Returns a range of synopses of a movie.

## GET
This request requires the `data_movie_synopses` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. The `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_synopses` ID for the movie, returned in responses to the following requests.  The `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_synopses",
       "description":"Synopses of a movie.",
       "properties":{
          "synopses":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Synopsis of the movie.",
                   "properties":{
                      "length":{
                         "type":"string",
                         "description":"Type of synopsis.",
                         "oneOf":[
                            {
                               "enum":[
                                  "long"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 420 characters."
                            },
                            {
                               "enum":[
                                  "short"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 150 characters."
                            },
                            {
                               "enum":[
                                  "plain"
                               ],
                               "description":"Straightforward description, without credits, that is never critical."
                            },
                            {
                               "enum":[
                                  "extended"
                               ],
                               "description":"Straightforward, objective plot synopsis with up to 2000 characters."
                            },
                            {
                               "enum":[
                                  "source"
                               ],
                               "description":"Synopsis supplied by the channel on which the show is broadcast."
                            },
                            {
                               "enum":[
                                  "review"
                               ],
                               "description":"Movie review."
                            }
                         ]
                      },
                      "in":{
                         "type":"string",
                         "description":"Language of the synopsis."
                      },
                      "synopsis":{
                         "type":"string",
                         "description":"The synopsis."
                      },
                      "cuts":{
                         "type":"array",
                         "description":"Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark).",
                         "items":{
                            "type":"string"
                         }
                      }
                   },
                   "required":[
                      "length",
                      "in",
                      "synopsis"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_synopses/best [/data_movie_synopses/best?id={id}&length={length}&length2={length2}&length3={length3}&length4={length4}&in={in}&in2={in2}&in3={in3}]
Returns the best available synopsis of a movie, based on type:
+  `long` &mdash; Straightforward, objective description of the movie in up to 420 characters.
+  `short` &mdash; A shorter version of the "long" description.
+  `plain` &mdash; A straightforward description without credits that is never critical.
+  `extended` &mdash; A more detailed description than the "long" description, up to 2000 characters.

## GET
This request requires the `data_movie_synopses` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. The `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_synopses` ID for the movie, returned in responses to the following requests.  The `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.
  + length (required, string enum, `short`)
    First choice for type of description:
    <table>
    <tr><th>Value</th><th>Description</th>
    </tr><tr>
    <td>long</td><td><p>Straightforward, objective description of the movie in up to 420 characters.</p></td>
    </tr><tr>
    <td>short</td><td><p>A shorter version of the "long" description.</p></td>
    </tr><tr>
    <td>plain</td><td><p>A straightforward description without credits that is never critical.</p></td>
    </tr><tr>
    <td>extended</td><td><p>A more detailed description than the "long" description, up to 2000 characters.</p></td>
    </tr>
    </table>

  + length2 (optional, string enum, `long`)
    Second choice for type of description.
  + length3 (optional, string enum, `plain`)
    Third choice for type of description.
  + length4 (optional, string enum, `extended`)
    Fourth choice for type of description.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_synopsis",
       "description":"Synopses of a movie.",
       "properties":{
          "synopsis":{
             "type":"object",
             "description":"Synopsis of the movie.",
             "properties":{
                "length":{
                   "type":"string",
                   "description":"Type of synopsis.",
                   "oneOf":[
                      {
                         "enum":[
                            "long"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 420 characters."
                      },
                      {
                         "enum":[
                            "short"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 150 characters."
                      },
                      {
                         "enum":[
                            "plain"
                         ],
                         "description":"Straightforward description, without credits, that is never critical."
                      },
                      {
                         "enum":[
                            "extended"
                         ],
                         "description":"Straightforward, objective plot synopsis with up to 2000 characters."
                      },
                      {
                         "enum":[
                            "source"
                         ],
                         "description":"Synopsis supplied by the channel on which the show is broadcast."
                      },
                      {
                         "enum":[
                            "review"
                         ],
                         "description":"Movie review."
                      }
                   ]
                },
                "in":{
                   "type":"string",
                   "description":"Language of the synopsis."
                },
                "synopsis":{
                   "type":"string",
                   "description":"The synopsis."
                },
                "cuts":{
                   "type":"array",
                   "description":"Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark).",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "required":[
                "length",
                "in",
                "synopsis"
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_synopsis [/data_movie_synopsis?id={id}&in={in}&in2={in2}&in3={in3}]
Returns a synopsis of a movie.

__NOTE: This request is now deprecated.__ Use one of the `data_movie_synopses` requests instead:
+  [data_movie_synopses/best](/#reference/movie/datamoviesynopsesbest)
+  [data_movie_synopses/collection](/#reference/movie/datamoviesynopsescollection)

## GET
This request requires the `data_movie_synopses` ID for the movie, which is returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie_synopses` ID for the movie, returned in responses to [data_movie](/#reference/movie/datamovie) requests. A `data_movie_synopses` ID is the same as the `data_movie` ID for the movie.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {

        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "title": "movie_synopses",
        "description": "Synopses of a movie.",
        "properties": {
            "id": {
                "type": "integer",
                "description": "Rovi ID for the movie."
            },
            "synopsis": {
                "type": "object",
                "description": "Synopsis of the movie.",
                "properties": {
                    "length": {
                        "type": "string",
                        "description": "Type of synopsis.",
                        "oneOf": [
                            {
                                "enum": [
                                    "long"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 420 characters."
                            },
                            {
                                "enum": [
                                    "short"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 150 characters."
                            },
                            {
                                "enum": [
                                    "plain"
                                ],
                                "description": "Straightforward description, without credits, that is never critical."
                            },
                            {
                                "enum": [
                                    "extended"
                                ],
                                "description": "Straightforward, objective plot synopsis with up to 2000 characters."
                            },
                            {
                                "enum": [
                                    "source"
                                ],
                                "description": "Synopsis supplied by the channel on which the show is broadcast."
                            },
                            {
                                "enum": [
                                    "review"
                                ],
                                "description": "Movie review."
                            }
                        ]
                    },
                    "in": {
                        "type": "string",
                        "description": "Language of the synopsis."
                    },
                    "synopsis": {
                        "type": "string",
                        "description": "Synopsis of the program."
                    },
                    "cuts": {
                        "type": "string",
                        "description": "Character positions at which you can end the synopsis to conserve space. A cut number is the number of the last character to include, not the first character to cut. Add a period after that point if there is no ending punctuation (a period or a period followed by a single of double quotation mark)."
                    }
                },
                "required": [
                    "length",
                    "in"
                ]
            },
            "links": {
                "type": "object",
                "properties": {
                    "data_movie": {
                        "type": "object",
                        "description": "ID to use in a data_movie request to get information about the movie.",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    },
                    "data_movie_synopses": {
                        "type": "object",
                        "description": "ID to use in a data_movie_synopses request to get synopses of the movie.",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    }
                },
                "required": [
                    "data_movie",
                    "data_movie_synopses"
                ]
            },
            "page": {
                "type": "integer",
                "description": "Pagination index of the request."
            },
            "size": {
                "type": "integer",
                "description": "Number of elements returned."
            },
            "total": {
                "type": "integer",
                "description": "Total number of elements."
            }
        },
        "required": [
            "id",
            "links"
        ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_movie_theatricals [/data_movie_theatricals?id={id}&page={page}]
Returns information about the theatrical releases of a movie by country.

## GET
This request requires the `data_movie` ID for the movie, which is returned in responses to the following requests:
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
+  [discover_all_similar_video/movie](/#reference/recommendations/discoverallsimilarvideomovie)
+  [discover_all_video_by_genre/movie](/#reference/search/discoverallvideobygenremovie)
+  [discover_all_video_by_search/movie](/#reference/search/discoverallvideobysearchmovie)
+  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
+  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
+  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

+ Parameters
  + id (required, integer, `914806985`)
    The `data_movie` ID for the movie, returned in responses to the following requests:
      +  [data_airing](/#reference/tv-schedule/dataairing)
      +  [data_movie_appearances](/#reference/tv-schedule/datamovieappearances)
      +  [discover_all_similar_video/movie](/#reference/recommendations/discoverallsimilarvideomovie)
      +  [discover_all_video_by_genre/movie](/#reference/search/discoverallvideobygenremovie)
      +  [discover_all_video_by_search/movie](/#reference/search/discoverallvideobysearchmovie)
      +  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
      +  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
      +  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"movie_theatricals",
       "description": "Information about the theatrical releases of a movie.",
       "properties":{
          "in":{
             "type":"string"
          },
          "theatricals":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "country":{
                         "type":"string",
                         "description":"Country of the theatrical release."
                      },
                      "revenue":{
                         "type":"object",
                         "description":"Box office revenue from the release.",
                         "properties":{
                            "currency":{
                               "type":"string",
                               "description":"ISO 4217 code for the currency."
                            },
                            "total":{
                               "type":"integer",
                               "description":"Total revenue for the country."
                            },
                            "international":{
                               "type":"integer",
                               "description":"Total international revenue."
                            }
                         },
                         "required":[
                            "currency",
                            "total"
                         ]
                      },
                      "releases":{
                         "type":"array",
                         "items":[
                            {
                               "type":"object",
                               "properties":{
                                  "type":{
                                     "type":"string",
                                     "description":"Type of release."
                                  },
                                  "date":{
                                     "type":"string",
                                     "description":"UTC date of the release."
                                  },
                                  "year":{
                                     "type":"integer",
                                     "description":"Year of the release."
                                  }
                               },
                               "required":[
                                  "date",
                                  "year"
                               ]
                            }
                         ]
                      }
                   },
                   "required":[
                      "country"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "in",
          "theatricals",
          "ref"
       ]
    }
```
+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# Group Series
This section documents the calls that return data about a TV series.

*Design Note:* The `data_series` ID for a TV series identifies the series in all of the following API calls.
- [data_series](/#reference/series/dataseries)
- [data_delta_series](/#reference/series/datadeltaseries)
- [data_series_credits/cast](/#reference/series/dataseriescreditscast)
- [data_series_credits/crew](/#reference/series/dataseriescreditscrew)
- [data_series_credits/credits](/#reference/series/dataseriescreditscredits)
- [data_series_history](/#reference/series/dataserieshistory)
- [data_series_ratings](/#reference/series/dataseriesratings)
- [data_series_specials](/#reference/series/dataseriesspecials)
- [data_series_synopses/collection](/#reference/series/dataseriessynopsescollection)
- [data_series_synopses/best](/#reference/series/dataseriessynopsesbest)
- [data_series_synopsis](/#reference/series/dataseriessynopsis)
- [data_series_awards](/#reference/awards/dataseriesawards) (in the Awards section)
- [data_series_appearances](/#reference/tv-schedule/dataseriesappearances) (in the TV Schedule section)
- [data_content_images/best](/#reference/image/datacontentimagesbest) (in the Image section)
- [data_content_images/collection](/#reference/image/datacontentimagescollection) (in the Image section)

# data_series [/data_series?id={id}&in={in}&in2={in2}&in3={in3}]
Returns information and editorial content about a TV series.

## GET
This request requires the `data_series` ID for the series, which is returned in responses to the following requests:
+  [data_airing](/#reference/tv-schedule/dataairing)
+  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
+  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
+  [discover_all_video_by_genre/series](/#reference/search/discoverallvideobygenreseries)
+  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
+  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

+ Parameters
  + id (required, integer, `915363654`)
    The `data_series` ID for the series, returned in responses to the following requests:
       +  [data_airing](/#reference/tv-schedule/dataairing)
       +  [data_series_appearances](/#reference/tv-schedule/dataseriesappearances)
       +  [discover_all_similar_video/content](/#reference/recommendations/discoverallsimilarvideocontent)
       +  [discover_all_video_by_genre/series](/#reference/search/discoverallvideobygenreseries)
       +  [discover_all_video_by_genre/content](/#reference/search/discoverallvideobygenrecontent)
       +  [discover_all_video_by_search/content](/#reference/search/discoverallvideobysearchcontent)

  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"series",
       "description":"Information about a TV series.",
       "properties":{
          "market":{
             "type":"array",
             "description":"Regions for which this data is relevant. 'AL' applies to all countries we cover except for AU, BR, CN, HK, IN, MY, PH, RU, SG, TR, and TW.",
             "items":{
                "type":"string"
             }
          },
          "in":{
             "type":"string",
             "description":"Language of the series."
          },
          "title":{
             "type":"string",
             "description":"Title of the show."
          },
          "alts":{
             "type":"object",
             "description":"Alternate titles of the show.",
             "properties":{
                "short15":{
                   "type":"string",
                   "description":"Title with up to 15 characters for a grid cell. Creative abbreviations used as needed."
                },
                "short30":{
                   "type":"string",
                   "description":"Title with up to 30 characters. Creative abbreviations used as needed."
                },
                "short8":{
                   "type":"string",
                   "description":"Title with up to 8 characters for a grid cell. Creative abbreviations used as needed."
                },
                "short50":{
                   "type":"string",
                   "description":"Title with up to 50 characters. Creative abbreviations used as needed."
                },
                "alias":{
                   "type":"string",
                   "description":"Alternate title by which a show has been distributed."
                },
                "alias2":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "alias3":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "alias4":{
                   "type":"string",
                   "description":"Another alternate title by which a show has been distributed."
                },
                "subtitle":{
                   "type":"string",
                   "description":"Subtitle of the show."
                }
             }
          },
          "image":{
             "type":"object",
             "description":"Information about the primary image associated with the show.",
             "properties":{
                "zoom":{
                   "type":"string",
                   "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                   "oneOf":[
                      {
                         "enum":[
                            "head"
                         ],
                         "description":"Head or shoulders to top of head."
                      },
                      {
                         "enum":[
                            "torso"
                         ],
                         "description":"Chest or thigh to top of head."
                      },
                      {
                         "enum":[
                            "body"
                         ],
                         "description":"Body fills at least 80% of frame."
                      },
                      {
                         "enum":[
                            "framed"
                         ],
                         "description":"Full body fills 50% to 80% of frame."
                      },
                      {
                         "enum":[
                            "std"
                         ],
                         "description":"Full body fills 50% of frame or less."
                      }
                   ]
                },
                "type":{
                   "type":"string",
                   "description":"Type of image.",
                   "oneOf":[
                      {
                         "enum":[
                            "album"
                         ],
                         "description":"Album cover front."
                      },
                      {
                         "enum":[
                            "album2"
                         ],
                         "description":"Album cover back."
                      },
                      {
                         "enum":[
                            "athlete"
                         ],
                         "description":"Athlete image."
                      },
                      {
                         "enum":[
                            "box"
                         ],
                         "description":"VHS box cover."
                      },
                      {
                         "enum":[
                            "celebrity"
                         ],
                         "description":"Celebrity."
                      },
                      {
                         "enum":[
                            "dvd"
                         ],
                         "description":"DVD box cover."
                      },
                      {
                         "enum":[
                            "gallery"
                         ],
                         "description":"Key cast, no set."
                      },
                      {
                         "enum":[
                            "gallery2"
                         ],
                         "description":"Supporting cast, no set."
                      },
                      {
                         "enum":[
                            "generic"
                         ],
                         "description":"Placeholder iconography or photograph."
                      },
                      {
                         "enum":[
                            "group"
                         ],
                         "description":"Over four cast members."
                      },
                      {
                         "enum":[
                            "head"
                         ],
                         "description":"One key cast member."
                      },
                      {
                         "enum":[
                            "head2"
                         ],
                         "description":"One supporting cast member."
                      },
                      {
                         "enum":[
                            "jersey"
                         ],
                         "description":"Sports jersey."
                      },
                      {
                         "enum":[
                            "key"
                         ],
                         "description":"Key cast or show image."
                      },
                      {
                         "enum":[
                            "league"
                         ],
                         "description":"Sports league logo."
                      },
                      {
                         "enum":[
                            "olympic"
                         ],
                         "description":"Olympic image."
                      },
                      {
                         "enum":[
                            "poster"
                         ],
                         "description":"Poster art."
                      },
                      {
                         "enum":[
                            "prod"
                         ],
                         "description":"Key cast on set."
                      },
                      {
                         "enum":[
                            "prod2"
                         ],
                         "description":"Supporting cast on set."
                      },
                      {
                         "enum":[
                            "program"
                         ],
                         "description":"Key cast from program."
                      },
                      {
                         "enum":[
                            "program2"
                         ],
                         "description":"Supporting cast from program."
                      },
                      {
                         "enum":[
                            "set"
                         ],
                         "description":"DVD box set cover."
                      },
                      {
                         "enum":[
                            "showcard"
                         ],
                         "description":"TV series poster."
                      },
                      {
                         "enum":[
                            "team"
                         ],
                         "description":"Sports team logo."
                      },
                      {
                         "enum":[
                            "team2"
                         ],
                         "description":"Sports team secondary logo."
                      },
                      {
                         "enum":[
                            "trailer"
                         ],
                         "description":"Image for trailer, 16:9."
                      },
                      {
                         "enum":[
                            "video"
                         ],
                         "description":"Video box cover."
                      }
                   ]
                },
                "ref":{
                   "type":"object",
                   "properties":{
                      "id":{
                         "type":"integer",
                         "description":"ID to use to get information about this resource."
                      },
                      "me":{
                         "type":"string",
                         "description":"URI template to use to get information about this resource."
                      },
                      "parent":{
                         "type":"string",
                         "description":"URI template for information about the parent resource."
                      },
                      "children":{
                         "type":"array",
                         "description":"URI templates for child resources."
                      }
                   },
                   "required":[
                      "id",
                      "me"
                   ]
                }
             },
             "required":[
                "ref"
             ]
          },
          "networks":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Networks that broadcast the series.",
                   "properties":{
                      "name":{
                         "type":"string",
                         "description":"Network that broadcast the TV series."
                      },
                      "start":{
                         "type":"integer",
                         "description":"Year the network began broadcasting the TV series."
                      },
                      "end":{
                         "type":"integer",
                         "description":"Year the network stopped broadcasting the TV series."
                      }
                   },
                   "required":[
                      "name",
                      "start"
                   ]
                }
             ]
          },
          "isSyndicated":{
             "type":"boolean",
             "description":"True if the TV series is syndicated. Omitted if false."
          },
          "isMini":{
             "type":"boolean",
             "description":"True if the TV series is a miniseries. Omitted if false."
          },
          "spoken":{
             "type":"array",
             "description":"Languages spoken in the original release.",
             "items":{
                "type":"string"
             }
          },
          "countries":{
             "type":"array",
             "description":"Countries in which the episode was produced.",
             "items":{
                "type":"string"
             }
          },
          "category":{
             "type":"string",
             "description":"Program category: News, Movie, Music, Sports, Lifestyle, Children's, Other."
          },
          "genres":{
             "type":"array",
             "description":"Genres the series fits in.",
             "items":{
                "type":"string"
             }
          },
          "subGenres":{
             "type":"array",
             "description":"Subgenres the series fits in.",
             "items":{
                "type":"string"
             }
          },
          "moods":{
             "type":"array",
             "description":"Terms that describe expressive characteristics of the series.",
             "items":{
                "type":"string"
             }
          },
          "tones":{
             "type":"array",
             "description":"Feelings and attitudes that motivate or fit with the series.",
             "items":{
                "type":"string"
             }
          },
          "themes":{
             "type":"array",
             "description":"Topics and circumstances that motivate or fit with the series.",
             "items":{
                "type":"string"
             }
          },
          "keywords":{
             "type":"array",
             "description":"Keywords that describe characteristics of the series.",
             "items":{
                "type":"string"
             }
          },
          "aesthetics":{
             "type":"array",
             "description":"Artistic styles that apply to the series, distinct techniques filmmakers employ for a specific effect.",
             "items":{
                "type":"string"
             }
          },
          "audiences":{
             "type":"array",
             "description":"Audience types that the series is intended to appeal to.",
             "items":{
                "type":"string"
             }
          },
          "periods":{
             "type":"array",
             "description":"Time periods when the series story takes place.",
             "items":{
                "type":"string"
             }
          },
          "characters":{
             "type":"array",
             "description":"Character types that appear in the series.",
             "items":{
                "type":"string"
             }
          },
          "importance":{
             "type":"array",
             "description":"Rating phrases that apply to a review of the series.",
             "items":{
                "type":"string"
             }
          },
          "flags":{
             "type":"array",
             "description":"Theme phrases that apply to a review of the series.",
             "items":{
                "type":"string"
             }
          },
          "facebooks":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Facebook accounts associated with the series.",
                   "properties":{
                      "facebookId":{
                         "type":"integer",
                         "description":"Facebook ID."
                      },
                      "type":{
                         "type":"string",
                         "description":"Facebook page type: official or additional.",
                         "oneOf":[
                            {
                               "enum":[
                                  "official"
                               ]
                            },
                            {
                               "enum":[
                                  "additional"
                               ]
                            }
                         ]
                      },
                      "uri":{
                         "type":"string",
                         "description":"Facebook page URL."
                      }
                   },
                   "required":[
                      "facebookId",
                      "type",
                      "uri"
                   ]
                }
             ]
          },
          "twitters":{
             "type":"array",
             "description":"Twitter accounts associated with the series.",
             "items":{
                "type":"string"
             }
          },
          "synonyms":{
             "type":"array",
             "description":"Legacy IDs for the show.",
             "items":[
                {
                   "type":"object",
                   "properties":{
                      "program":{
                         "type":"integer",
                         "description":"Cosmo ID."
                      },
                      "iguide":{
                         "type":"integer",
                         "description":"iGuide ID."
                      },
                      "amg":{
                         "type":"string",
                         "description":"AMG ID."
                      },
                      "eidr":{
                         "type":"string",
                         "description":"EIDR ID."
                      },
                      "in":{
                         "type":"string",
                         "description":"Language of the show."
                      },
                      "title":{
                         "type":"string",
                         "description":"Title of the show."
                      }
                   },
                   "required":[
                      "in",
                      "title"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          }
       },
       "required":[
          "in",
          "title",
          "networks",
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_delta_series [/data_delta_series?day={day}&next={next}]
Returns IDs and ETags for [data_series](/#reference/series/dataseries) response data that changed during a single UTC date one to four days ago.

Use this request as a first step toward updating your cached [data_series](/#reference/series/dataseries) response data.

## GET
If more than 100 results are available, the response includes a __next__ field to identify the starting point of the next page of results.

+ Parameters
  + day (required, string matching \d{4}-\d{2}-\d{2}, `2015-08-23`)
    A UTC date, specified in YYYY-MM-DD format, that is one to four days before the current UTC date.
  + next (optional, integer)
    The starting point for the next page of results, returned in the __next__ field in a response to this request if another page of results is available.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"data_delta_series",
       "description":"List of data_series response data that changed during a specified UTC date.",
       "properties":{
          "date":{
             "type":"string",
             "description":"UTC date requested."
          },
          "ref":{
             "type":"object",
             "properties":{
                "next":{
                   "type":"string",
                   "description":"Value to use in the 'next' parameter to return the next page of results."
                },
                "date":{
                   "type":"string",
                   "description":"UTC date this response applies to."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                }
             },
             "required":[
                "date",
                "me"
             ]
          },
          "type":{
             "type":"string",
             "description":"Type of changed data."
          },
          "size":{
             "type":"integer",
             "description":"Number of items returned in this response."
          },
          "deltas":{
             "type":"array",
             "description":"Information about changes during the requested date.",
             "items":[
                {
                   "type":"object",
                   "description":"Information about changed data.",
                   "properties":{
                      "id":{
                         "type":"integer",
                         "description":"Rovi ID for data that changed."
                      },
                      "ref":{
                         "type":"object",
                         "properties":{
                            "id":{
                               "type":"integer",
                               "description":"ID to use to get the changed data."
                            },
                            "me":{
                               "type":"string",
                               "description":"URI template name to use to get the changed data."
                            }
                         }
                      },
                      "etag":{
                         "type":"string",
                         "description":"ETag for the changed data."
                      }
                   }
                }
             ]
          }
       },
       "required":[
          "ref",
          "etag"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_series_credits/cast [/data_series_credits/cast?id={id}&page={page}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns cast credits for a TV series.

## GET
This request requires the `data_series_credits` ID for the series, which is returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.

+ Parameters
  + id (required, integer, `915363654`)
    The `data_series_credits` ID for the series, returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `role`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __role__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-role__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __person.image=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __role=Sheldon Cooper__. To end with items that contain a particular value, precede the value with an exclamation like this: __role=!Sheldon Cooper__.

  + by2 (optional, string, `role`)
    Second level sort specification.
  + by3 (optional, string, `role`)
    Third level sort specification.
  + by4 (optional, string, `role`)
    Fourth level sort specification.
  + by5 (optional, string, `role`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"series_credits",
       "description":"Credits for a TV series.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the TV series.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language code."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_series_credits/crew [/data_series_credits/crew?id={id}&page={page}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns crew credits for a TV series.

## GET
This request requires the `data_series_credits` ID for the series, which is returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.

+ Parameters
  + id (required, integer, `915363654`)
    The `data_series_credits` ID for the series, returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `type`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) sign like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with a field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify a field-equals-null, like this: __type=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.

  + by2 (optional, string, `type`)
    Second level sort specification.
  + by3 (optional, string, `type`)
    Third level sort specification.
  + by4 (optional, string, `type`)
    Fourth level sort specification.
  + by5 (optional, string, `type`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"series_credits",
       "description":"Credits for a TV series.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the TV series.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language code."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_series_credits/credits [/data_series_credits/credits?id={id}&page={page}&by={by}&by2={by2}&by3={by3}&by4={by4}&by5={by5}&in={in}&in2={in2}&in3={in3}]
Returns both cast and crew credits for a TV series.

## GET
This request requires the `data_series_credits` ID for the series, which is returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.

+ Parameters
  + id (required, integer, `915363654`)
    The `data_series_credits` ID for the series, returned in responses to the [data_series](/#reference/series/dataseries) request. A `data_series_credits` ID is the same as the `data_series` ID for the series.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.
  + by (optional, string, `credit`)
    Response field or object.field to sort by. Child fields must be single-valued, that is, not within an array.
      +  For an ascending sort, replace {by} with the field name like this: __credit__ or __person.alts.last__. For a descending sort, precede the field name with a minus (-) like this: __-credit__.
      +  To start with items that contain a particular field, replace {by} with field-equals-not-null, like this: __person.image=!null__. To start with items that are missing a particular field, specify field-equals-null, like this: __role=null__.
      +  To start with items that contain a particular value in a top-level field, replace {by} with field-equals-value, like this: __type=director__. To end with items that contain a particular value, precede the value with an exclamation like this: __type=!company__.

  + by2 (optional, string, `credit`)
    Second level sort specification.
  + by3 (optional, string, `credit`)
    Third level sort specification.
  + by4 (optional, string, `credit`)
    Fourth level sort specification.
  + by5 (optional, string, `credit`)
    Fifth level sort specification.
  + in (optional, string, `en-US`)
    Language and country of the response data. Replace {in} with an ISO 639 language and ISO 3166-1 country code like this: __en-US__. If data is unavailable for that language and country, we try your {in2} and then {in3} choices.
    <br> &emsp; To specify language only, replace country with an asterisk like this: __en-\*__. To specify the default, the language and country associated with the content, use just an asterisk: __\*__.
    <br> &emsp; If you specify only language-and-country choices and those choices are unavailable, we will fall back to 1) just the language, 2) the language in another region, or 3) the default, in that order. To prevent the fallback and return a 404 error if your choices are unavailable, specify __!\*__ (exclamation and asterisk) in {in2} or {in3}. For a list of languages and countries with strong data support, see "Supported Locales" in the _Getting Started_ section.
  + in2 (optional, string, `en-*`)
    Second choice for language or localized content, specified in the same way: __fr-CA__ or __fr-\*__ or __\*__. To limit results instead to the first choice and return a 404 error for unavailable content, replace {in2} with __!\*__ (exclamation and asterisk).
  + in3 (optional, string, `*`)
    Third choice for language or localized content. If there is still no content match, we follow the standard fallback rules. To limit results to the previous choices, replace {in3} with __!\*__.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"series_credits",
       "description":"Credits for a TV series.",
       "properties":{
          "credits":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"Credits for the TV series.",
                   "properties":{
                      "in":{
                         "type":"string",
                         "description":"Language code."
                      },
                      "role":{
                         "type":"string",
                         "description":"Character portrayed."
                      },
                      "credit":{
                         "type":"string",
                         "description":"The credit."
                      },
                      "type":{
                         "type":"string",
                         "description":"Type of credit.",
                         "oneOf":[
                            {
                               "enum":[
                                  "actor"
                               ],
                               "description":"Actor."
                            },
                            {
                               "enum":[
                                  "company"
                               ],
                               "description":"Production company."
                            },
                            {
                               "enum":[
                                  "composer"
                               ],
                               "description":"Composer."
                            },
                            {
                               "enum":[
                                  "creator"
                               ],
                               "description":"Creator."
                            },
                            {
                               "enum":[
                                  "director"
                               ],
                               "description":"Director."
                            },
                            {
                               "enum":[
                                  "producer"
                               ],
                               "description":"Producer."
                            },
                            {
                               "enum":[
                                  "studio"
                               ],
                               "description":"Studio."
                            },
                            {
                               "enum":[
                                  "subject"
                               ],
                               "description":"Person who is the subject of the movie or program."
                            },
                            {
                               "enum":[
                                  "writer"
                               ],
                               "description":"Writer."
                            }
                         ]
                      },
                      "isCast":{
                         "type":"boolean",
                         "description":"Whether the credit is a cast credit: true or false."
                      },
                      "person":{
                         "type":"object",
                         "description":"Information about the person who earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the person."
                            },
                            "alts":{
                               "type":"object",
                               "description":"Other names the person is known by.",
                               "properties":{
                                  "first":{
                                     "type":"string",
                                     "description":"First name of the person."
                                  },
                                  "last":{
                                     "type":"string",
                                     "description":"Last name of the person."
                                  }
                               }
                            },
                            "image":{
                               "type":"object",
                               "description":"Primary image associated with the person.",
                               "properties":{
                                  "zoom":{
                                     "type":"string",
                                     "description":"How much of the subject appears in the picture. A value here indicates a closer zoom level may be available from the media_image request. A missing value indicates a std zoom.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"Head or shoulders to top of head."
                                        },
                                        {
                                           "enum":[
                                              "torso"
                                           ],
                                           "description":"Chest or thigh to top of head."
                                        },
                                        {
                                           "enum":[
                                              "body"
                                           ],
                                           "description":"Body fills at least 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "framed"
                                           ],
                                           "description":"Full body fills 50% to 80% of frame."
                                        },
                                        {
                                           "enum":[
                                              "std"
                                           ],
                                           "description":"Full body fills 50% of frame or less."
                                        }
                                     ]
                                  },
                                  "type":{
                                     "type":"string",
                                     "description":"Type of image.",
                                     "oneOf":[
                                        {
                                           "enum":[
                                              "album"
                                           ],
                                           "description":"Album cover front."
                                        },
                                        {
                                           "enum":[
                                              "album2"
                                           ],
                                           "description":"Album cover back."
                                        },
                                        {
                                           "enum":[
                                              "athlete"
                                           ],
                                           "description":"Athlete image."
                                        },
                                        {
                                           "enum":[
                                              "box"
                                           ],
                                           "description":"VHS box cover."
                                        },
                                        {
                                           "enum":[
                                              "celebrity"
                                           ],
                                           "description":"Celebrity."
                                        },
                                        {
                                           "enum":[
                                              "dvd"
                                           ],
                                           "description":"DVD box cover."
                                        },
                                        {
                                           "enum":[
                                              "gallery"
                                           ],
                                           "description":"Key cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "gallery2"
                                           ],
                                           "description":"Supporting cast, no set."
                                        },
                                        {
                                           "enum":[
                                              "generic"
                                           ],
                                           "description":"Placeholder iconography or photograph."
                                        },
                                        {
                                           "enum":[
                                              "group"
                                           ],
                                           "description":"Over four cast members."
                                        },
                                        {
                                           "enum":[
                                              "head"
                                           ],
                                           "description":"One key cast member."
                                        },
                                        {
                                           "enum":[
                                              "head2"
                                           ],
                                           "description":"One supporting cast member."
                                        },
                                        {
                                           "enum":[
                                              "jersey"
                                           ],
                                           "description":"Sports jersey."
                                        },
                                        {
                                           "enum":[
                                              "key"
                                           ],
                                           "description":"Key cast or show image."
                                        },
                                        {
                                           "enum":[
                                              "league"
                                           ],
                                           "description":"Sports league logo."
                                        },
                                        {
                                           "enum":[
                                              "olympic"
                                           ],
                                           "description":"Olympic image."
                                        },
                                        {
                                           "enum":[
                                              "poster"
                                           ],
                                           "description":"Poster art."
                                        },
                                        {
                                           "enum":[
                                              "prod"
                                           ],
                                           "description":"Key cast on set."
                                        },
                                        {
                                           "enum":[
                                              "prod2"
                                           ],
                                           "description":"Supporting cast on set."
                                        },
                                        {
                                           "enum":[
                                              "program"
                                           ],
                                           "description":"Key cast from program."
                                        },
                                        {
                                           "enum":[
                                              "program2"
                                           ],
                                           "description":"Supporting cast from program."
                                        },
                                        {
                                           "enum":[
                                              "set"
                                           ],
                                           "description":"DVD box set cover."
                                        },
                                        {
                                           "enum":[
                                              "showcard"
                                           ],
                                           "description":"TV series poster."
                                        },
                                        {
                                           "enum":[
                                              "team"
                                           ],
                                           "description":"Sports team logo."
                                        },
                                        {
                                           "enum":[
                                              "team2"
                                           ],
                                           "description":"Sports team secondary logo."
                                        },
                                        {
                                           "enum":[
                                              "trailer"
                                           ],
                                           "description":"Image for trailer, 16:9."
                                        },
                                        {
                                           "enum":[
                                              "video"
                                           ],
                                           "description":"Video box cover."
                                        }
                                     ]
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "zoom",
                                  "ref"
                               ]
                            },
                            "ref":{
                               "type":"object",
                               "properties":{
                                  "id":{
                                     "type":"integer",
                                     "description":"ID to use to get information about this resource."
                                  },
                                  "me":{
                                     "type":"string",
                                     "description":"URI template to use to get information about this resource."
                                  },
                                  "parent":{
                                     "type":"string",
                                     "description":"URI template for information about the parent resource."
                                  },
                                  "children":{
                                     "type":"array",
                                     "description":"URI templates for child resources."
                                  }
                               },
                               "required":[
                                  "id",
                                  "me"
                               ]
                            }
                         },
                         "required":[
                            "name",
                            "ref"
                         ]
                      },
                      "organization":{
                         "type":"object",
                         "description":"Information about the company that earned the credit.",
                         "properties":{
                            "name":{
                               "type":"string",
                               "description":"Name of the company."
                            }
                         }
                      }
                   },
                   "required":[
                      "in",
                      "credit"
                   ]
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```

# data_series_history [/data_series_history?id={id}&page={page}]
Returns the broadcast history of a TV series.

## GET
This request requires the `data_series_history` ID for the series, which is returned in responses to [data_series](/#reference/series/dataseries) requests. A `data_series_history` ID is the same as the `data_series` ID for the series.

+ Parameters
  + id (required, integer, `915363654`)
    The `data_series_history` ID for the series, returned in responses to [data_series](/#reference/series/dataseries) requests. A `data_series_history` ID is the same as the `data_series` ID for the series.
  + page (optional, integer, `1`)
    Page number to return. Default is 1, which returns the first page in a list of items. A page number greater than the number of available pages returns status code 404.

+ Response 200 (application/json)
```
    {
       "$schema":"http:\/\/json-schema.org\/draft-04\/schema#",
       "type":"object",
       "title":"series_history",
       "description":"History of a TV series.",
       "properties":{
          "history":{
             "type":"array",
             "items":[
                {
                   "type":"object",
                   "description":"History of the TV series.",
                   "properties":{
                      "start":{
                         "type":"string",
                         "description":"Year the series began."
                      },
                      "end":{
                         "type":"string",
                         "description":"Year the series ended."
                      },
                      "source":{
                         "type":"array",
                         "items":[
                            {
                               "type":"object",
                               "description":"Information about the source of the TV series.",
                               "properties":{
                                  "name":{
                                     "type":"string",
                                     "description":"Name of a source of the TV series."
                                  },
                                  "ref":{
                                     "type":"object",
                                     "properties":{
                                        "id":{
                                           "type":"integer",
                                           "description":"ID to use to get information about this resource."
                                        },
                                        "me":{
                                           "type":"string",
                                           "description":"URI template to use to get information about this resource."
                                        },
                                        "parent":{
                                           "type":"string",
                                           "description":"URI template for information about the parent resource."
                                        },
                                        "children":{
                                           "type":"array",
                                           "description":"URI templates for child resources."
                                        }
                                     },
                                     "required":[
                                        "id",
                                        "me"
                                     ]
                                  }
                               },
                               "required":[
                                  "ref"
                               ]
                            }
                         ]
                      }
                   }
                }
             ]
          },
          "ref":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "description":"ID to use to get information about this resource."
                },
                "me":{
                   "type":"string",
                   "description":"URI template to use to get information about this resource."
                },
                "parent":{
                   "type":"string",
                   "description":"URI template for information about the parent resource."
                },
                "children":{
                   "type":"array",
                   "description":"URI templates for child resources."
                }
             },
             "required":[
                "id",
                "me"
             ]
          },
          "page":{
             "type":"integer",
             "description":"Page number of the response."
          },
          "size":{
             "type":"integer",
             "description":"Number of elements in this page."
          },
          "total":{
             "type":"integer",
             "description":"Total number of elements available."
          }
       },
       "required":[
          "ref"
       ]
    }
```

+ Response 400 (application/json)
```
    {
      "status": 400,
      "kind": "BAD_REQUEST",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "400-#",
          "title": "Invalid field",
          "message": "Documentation note: This status code indicates the request is malformed. Please correct the request per the specification and submit again.",
          "parameter": "Parameter value."
        }
      ]
    }
```
+ Response 401 (application/json)
```
    {
      "status": 401,
      "kind": "Unauthorized",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "401-#",
          "title": "401 Unauthorized",
          "message": "Documentation note: This status code indicates the request failed OAuth 1.0a authorization.",
          "parameter": null
        }
      ]
    }
```
+ Response 404 (application/json)
```
    {
      "status": 404,
      "kind": "NOT_FOUND",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "404-#",
          "title": "No result found",
          "message": "Documentation note: This status code indicates a requested resource is unavailable: not found, not authorized data, or end-of-list reached."
        }
      ]
    }
```
+ Response 429 (application/json)
```
    {
      "status": 429,
      "kind": "RATE_LIMIT_EXCEEDED",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "429-#",
          "title": "Rate limit exceeded",
          "message": "Documentation note: This status code indicates the per-second or per-UTC-date rate limit has been exceeded. Resubmit the request after sufficient time has passed, preferrably using an exponential backoff algorithm to reduce client traffic."
        }
      ]
    }
```
+ Response 500 (application/json)
```
    {
      "status": 500,
      "kind": "INTERNAL_SERVER_ERROR",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "500-#",
          "title": "Unknown Error",
          "message": "Documentation note: This status code indicates the server encountered an unexpected error condition."
        }
      ]
    }
```
+ Response 503 (application/json)
```
    {
      "status": 503,
      "kind": "SERVER_UNAVAILABLE",
      "request": {
        "method": "GET",
        "uri": "URI called."
      },
      "problems": [
        {
          "code": "503-#",
          "title": "Server Unavailable",
          "message": "Documentation note: This status code indicates the server is temporarily unavailable."
        }
      ]
    }
```
